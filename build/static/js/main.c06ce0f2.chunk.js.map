{"version":3,"sources":["game/Arrow.ts","game/Target.ts","game/GamePhysics.ts","game/Click.ts","game/Heart.ts","game/Game.ts","game/GameComponent.tsx","game-tester/GameTester.tsx","custom/CustomComponent.tsx","normal/NormalComponent.tsx","main/MainComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Arrow","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","triangleMesh","line","geometry","Geometry","vertices","push","Vector3","material","LineBasicMaterial","color","linewidth","Line","triangleGeometry","faces","Face3","triangleMaterial","MeshBasicMaterial","side","DoubleSide","Mesh","add","Group","Target","_Group","settings","direction2","speed2","maxSize2","sizeChangeValue2","sizeChangeDuration2","sizeChangeDistribution","sizeChangeDuration","minSize","circle","arrow","isSelected2","defaultColor","selectedColor","Color","circleMaterial","CircleGeometry","position","maxSize","speed","direction","sizeChangeValue","showDirection","undefined","set","x","y","z","Infinity","update","inherits","createClass","key","get","Math","abs","value","size","isSelected","sizeChangeFunction","max","scale","setRotationFromAxisAngle","Vector2","angle","normalize","arrowSize","Lodash","find","children","show","remove","GamePhysics","circles","bounds","time","updatePosition","handleCollision","updateSize","separateCircles","forEach","distance","clone","multiplyScalar","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","right","top","err","return","i","length","j","circle2","distanceTo","v1","v2","x1","x2","sub","dot","pow","changedCircles","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","diff","sign","overlapSize","negate","uniq","Click","_Mesh","opacityChangeDistribution","changeValue","changeDuration","opacity","transparent","scaler","Heart","heartShape","Shape","moveTo","bezierCurveTo","ShapeGeometry","Game","bounds2","timer","gameTime","lastUpdateTime","pauseTime","targets","clicks","targetPace","targetSpeed","targetSize","targetDuration","gamePhysics","paused","hearts","score","lifeCount","onLifeOut","background","Subject","_this2","handler","a","index","findIndex","deleteProperty","prop","pullAt","parseInt","Proxy","heart","lifes","_this3","init","performance","now","setInterval","clearInterval","timeDiff","updateState","click","target","getTargetAt","pop","font","FontLoader","parse","helvetikerRegular","TextGeometry","height","textMaterial","Three","mesh","outer","random","left","bottom","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","Scene","GameComponent","props","game","gameMode","canvasRef","renderer","camera","selectedTarget","shouldDragTarget","shouldDragDirection","mouseDownPosition","previousMousePosition","animationFrame","animate","render","requestAnimationFrame","onMouseDown","event","mousePosition","clickToScenePos","pageX","pageY","directionEnd","pxToScene","onMouseUp","onBackgroundClick","onTargetClick","onClick","onMouseMove","currentMousePosition","dragVec","onTargetDrag","onDirectionDrag","React","createRef","canvas","current","WebGLRenderer","antialias","PerspectiveCamera","width","aspect","parentElement","clientWidth","clientHeight","setSize","updateProjectionMatrix","tan","degToRad","fov","cancelAnimationFrame","clickX","clickY","canvasPosX","offsetLeft","canvasPosY","offsetTop","react_default","createElement","ref","Component","styles","createStyles","drawerPaper","overflow","slider","padding","margin","mainContent","marginLeft","buttonContainer","display","flexDirection","justifyContent","GameTester","targetSettings","gameComponentRef","gameComponent","onMaxSizeChange","setState","onSizeChangeValueChange","onSpeedChange","onSizeChangeDurationChange","sizeChangeDistributionChange","onGameModeChange","onDelete","onPause","pause","onResume","resume","onTargetSelect","sceneToPx","state","objectSpread","open","showLifes","start","classes","_this$state$targetSet","Drawer_default","paper","variant","anchor","className","IconButton_default","index_es","Divider_default","Typography_default","id","Slider_default","min","disabled","aria-labelledby","onChange","step","FormControl_default","RadioGroup_default","FormControlLabel_default","control","Radio_default","icon","RadioButtonUnchecked_default","fontSize","checkedIcon","RadioButtonChecked_default","label","src_game_GameComponent","withStyles","withTheme","CustomComponent","addTarget","getRandomPosition","onPaceChange","pace","_this$state","NormalComponent","paceChange","maxSizeChange","speedChange","durationChange","targetAddedTime","stop","updateSettings","getValue","tryAgain","subscribe","changes","change","style","Modal_default","onClose","alignItems","paddingBottom","core_index_es","react_router_dom","to","root","flexGrow","menuButton","title","MainComponent","AppBar_default","elevation","Toolbar_default","Button_default","App","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c06ce0f2.chunk.js","sourcesContent":["import { Mesh, Geometry, LineBasicMaterial, Line, Vector3, Group, Face3, MeshBasicMaterial, DoubleSide } from 'three';\n\nexport default class Arrow extends Group {\n  triangleMesh: Mesh;\n  line: Line;\n\n  constructor() {\n    super();\n\n    const geometry = new Geometry();\n    geometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0.8, 0, 0));\n\n    const material = new LineBasicMaterial({ color: 0xff0000, linewidth: 1.85 });\n    \n    this.line = new Line(geometry, material);\n    \n    const triangleGeometry = new Geometry();\n    triangleGeometry.vertices.push(new Vector3(0.8, 0.1, 0));\n    triangleGeometry.vertices.push(new Vector3(0.8, -0.1, 0));\n    triangleGeometry.vertices.push(new Vector3(1, 0, 0));\n    triangleGeometry.faces.push(new Face3(0, 1, 2));\n    \n    const triangleMaterial = new MeshBasicMaterial({\n      color: 0xff0000,\n      side: DoubleSide\n    });\n\n    this.triangleMesh = new Mesh(triangleGeometry, triangleMaterial);\n\n    this.add(this.line);\n    this.add(this.triangleMesh);\n  }\n\n\n}","import { Mesh, Vector3, Group, CircleGeometry, MeshBasicMaterial, Vector2, Color } from 'three';\nimport Arrow from './Arrow';\nimport { Circle } from './GamePhysics';\nimport { TargetSizeDistribution, TargetSettings } from './GameComponent';\nimport Lodash from 'lodash';\n\nexport class Target extends Group implements Circle {\n  private direction2: Vector3;\n  private speed2: number;\n  private maxSize2: number;\n  private sizeChangeValue2: number;\n  private sizeChangeDuration2: number;\n\n  sizeChangeDistribution: TargetSizeDistribution;\n  sizeChangeDuration: number;\n  minSize: number;\n\n  circle: Mesh;\n  arrow: Arrow;\n\n  private isSelected2: boolean;\n  readonly color: Color;\n  defaultColor: Color;\n  selectedColor: Color;\n\n  get sizeChangeFunction() {\n    if (this.sizeChangeDistribution === 'constant') {\n      return (x: number) => 1;\n    }\n    return (x: number) => {\n      if (x < 0 || x > 1) {\n        return 0;\n      }\n      return 1 - Math.abs(2 * x - 1);\n    }\n  }\n\n  constructor(settings: TargetSettings) {\n    super();\n\n    this.defaultColor = new Color(0x143170);\n    this.selectedColor = new Color(0x7caaf4);\n    this.color = new Color(this.defaultColor);\n\n    const circleMaterial = new MeshBasicMaterial();\n    circleMaterial.color = this.color;\n    this.circle = new Mesh(new CircleGeometry(1, 50), circleMaterial);\n\n    this.arrow = new Arrow();\n\n    this.add(this.circle);\n    // this.add(this.arrow);\n\n    const { position, minSize, maxSize, sizeChangeDistribution, sizeChangeDuration, speed, direction, sizeChangeValue, showDirection } = settings;\n\n    if (position !== undefined) {\n      this.position.set(position.x, position.y, position.z);\n    } else {\n      this.position.set(0, 0, 0);\n    }\n\n    if (sizeChangeDistribution !== undefined) {\n      this.sizeChangeDistribution = sizeChangeDistribution;\n    } else {\n      this.sizeChangeDistribution = 'constant';\n    }\n\n    if (sizeChangeDuration !== undefined) {\n      this.sizeChangeDuration = sizeChangeDuration;\n    } else {\n      this.sizeChangeDuration = Infinity;\n    }\n\n    if (minSize !== undefined) {\n      this.minSize = minSize;\n    } else {\n      this.minSize = 0;\n    }\n\n    if (maxSize !== undefined) {\n      this.maxSize2 = maxSize;\n    } else {\n      this.maxSize2 = 1;\n    }\n\n    if (speed !== undefined) {\n      this.speed2 = speed;\n    } else {\n      this.speed2 = 0;\n    }\n\n    if (direction !== undefined) {\n      this.direction2 = direction;\n    } else {\n      this.direction2 = new Vector3(1, 1, 0);\n    }\n\n    if (sizeChangeValue) {\n      this.sizeChangeValue2 = sizeChangeValue;\n    } else {\n      this.sizeChangeValue2 = 0;\n    }\n\n    if (showDirection !== undefined) {\n      this.showDirection = showDirection;\n    }\n\n    this.isSelected2 = false;\n\n    this.update();\n  }\n\n  update() {\n    this.size = this.size;\n    this.direction = this.direction;\n    this.speed = this.speed;\n    this.isSelected = this.isSelected;\n  }\n\n\n  get maxSize() {\n    return this.maxSize2;\n  }\n\n  set maxSize(maxSize: number) {\n    this.maxSize2 = maxSize;\n    this.size = this.size;\n  }\n\n  get size() {\n    return this.sizeChangeFunction(this.sizeChangeValue) * (this.maxSize - this.minSize) + this.minSize;\n  }\n\n  set size(size: number) {\n    size = Math.max(1e-5, size);\n    this.scale.set(size, size, 1);\n    this.speed = this.speed;\n  }\n\n  get sizeChangeValue() {\n    return this.sizeChangeValue2;\n  }\n\n  set sizeChangeValue(value: number) {\n    this.sizeChangeValue2 = value;\n    this.size = this.size;\n  }\n\n  get isSelected() {\n    return this.isSelected2;\n  }\n\n  set isSelected(isSelected: boolean) {\n    this.isSelected2 = isSelected;\n    if (isSelected === true) {\n      this.color.set(this.selectedColor);\n    } else {\n      this.color.set(this.defaultColor);\n    }\n  }\n\n  get direction() {\n    return this.direction2;\n  }\n\n  set direction(direction: Vector3) {\n    this.arrow.setRotationFromAxisAngle(new Vector3(0, 0, 1), new Vector2(direction.x, direction.y).angle());\n    this.direction2 = direction.normalize();\n  }\n\n  get speed() {\n    return this.speed2;\n  }\n\n  set speed(speed: number) {\n    const arrowSize = Math.max(1e-5, speed / this.size);\n    this.arrow.scale.set(arrowSize, arrowSize, 1);\n    this.speed2 = speed;\n  }\n\n  get showDirection(): boolean {\n    return Lodash.find(this.children, this.arrow) !== undefined;\n  }\n\n  set showDirection(show: boolean) {\n    if (show && !this.showDirection) {\n      this.add(this.arrow);\n    } if (!show) {\n      Lodash.remove(this.children, this.arrow);\n    }\n  }\n\n}","import { Vector3 } from 'three';\nimport Lodash from 'lodash';\n\nexport interface Circle {\n  position: Vector3;\n  direction: Vector3;\n  speed: number;\n  sizeChangeFunction: (x: number) => number;\n  sizeChangeValue: number;\n  sizeChangeDuration: number;\n  minSize: number;\n  maxSize: number;\n  size: number;\n}\n\nexport interface Bounds {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\n\nconst cloneCircle = (circle: Circle): Circle => {\n  const circle2 = {} as Circle;\n  circle2.position = new Vector3(circle.position.x, circle.position.y, circle.position.z);\n  circle2.direction = new Vector3(circle.direction.x, circle.direction.y, circle.direction.z);\n  circle2.speed = circle.speed;\n  circle2.sizeChangeFunction = circle.sizeChangeFunction;\n  circle2.sizeChangeValue = circle.sizeChangeValue;\n  circle2.sizeChangeDuration = circle.sizeChangeDuration\n  circle2.minSize = circle.minSize;\n  circle2.maxSize = circle.maxSize;\n  circle2.size = circle.size;\n\n  return circle2;\n}\n\nexport class GamePhysics {\n  constructor(public circles?: Circle[], public bounds?: Bounds) {\n\n  }\n\n  updateState(time: number) {\n    this.updatePosition(time);\n    this.handleCollision();\n    this.updateSize(time);\n    this.separateCircles(this.circles);\n  }\n\n  updatePosition(time: number) {\n    this.circles.forEach(circle => {\n      const distance = time * (circle.speed / 1000);\n      circle.position.add(circle.direction.clone().multiplyScalar(distance));\n    });\n  }\n\n  updateSize(time: number) {\n    this.circles.forEach(circle => {\n      circle.sizeChangeValue += time / circle.sizeChangeDuration;\n    });\n  }\n\n  handleCollision() {\n    for (const circle of this.circles) {\n      if (Math.abs(circle.position.x) + circle.size - this.bounds.right > 0) {\n        circle.direction = new Vector3(-circle.direction.x, circle.direction.y, 0);\n      }\n\n      if (Math.abs(circle.position.y) + circle.size - this.bounds.top > 0) {\n        circle.direction = new Vector3(circle.direction.x, -circle.position.y, 0);\n      }\n    }\n\n    for (let i = 0; i < this.circles.length; i++) {\n      const circle = this.circles[i];\n      for (let j = i + 1; j < this.circles.length; j++) {\n        const circle2 = this.circles[j];\n        if (circle.size + circle2.size - circle.position.distanceTo(circle2.position) > 0) {\n          const v1 = circle.direction.clone();\n          const v2 = circle2.direction.clone();\n          const x1 = circle.position.clone();\n          const x2 = circle2.position.clone();\n          circle.direction = v1.clone().sub(x1.clone().sub(x2).multiplyScalar(v1.clone().sub(v2).dot(x1.clone().sub(x2)) / Math.pow(x1.clone().sub(x2).length(), 2)));\n          circle2.direction = v2.clone().sub(x2.clone().sub(x1).multiplyScalar(v2.clone().sub(v1).dot(x2.clone().sub(x1)) / Math.pow(x2.clone().sub(x1).length(), 2)));\n        }\n      }\n    }\n  }\n\n  separateCircles(circles: Circle[]) {\n    const changedCircles: Circle[] = [];\n\n    for (const circle of circles) {\n      let diff = Math.abs(circle.position.x) + circle.size - this.bounds.right;\n      if (diff > 0) {\n        circle.position.x -= diff * Math.sign(circle.position.x);\n        changedCircles.push(circle);\n      }\n      diff = Math.abs(circle.position.y) + circle.size - this.bounds.top;\n      if (diff > 0) {\n        circle.position.y -= diff * Math.sign(circle.position.y);\n        changedCircles.push(circle);\n      }\n    }\n\n    for (let i = 0; i < circles.length; i++) {\n      const circle = circles[i];\n      for (let j = i + 1; j < circles.length; j++) {\n        const circle2 = circles[j];\n        const overlapSize = circle.size + circle2.size - circle.position.distanceTo(circle2.position);\n        if (overlapSize > 0) {\n          const v1 = circle.position.clone().sub(circle2.position).normalize().multiplyScalar(overlapSize / 2 + 1e-10);\n          circle.position.add(v1);\n          circle2.position.add(v1.negate());\n          changedCircles.push(circle, circle2);\n        }\n      }\n    }\n\n    if (changedCircles.length > 0) {\n      this.separateCircles(Lodash.uniq(changedCircles));\n    }\n  }\n}","import { Mesh, CircleGeometry, MeshBasicMaterial, Color, Vector3 } from 'three';\nimport Arrow from './Arrow';\nimport { Circle } from './GamePhysics';\n\nexport class Click extends Mesh {\n  private sizeChangeDistribution: (x: number) => number;\n  private opacityChangeDistribution: (x: number) => number;\n  changeValue: number;\n  changeDuration: number;\n  maxSize: number;\n\n  readonly color: Color;\n\n  constructor(settings: { \n    position: Vector3, color?: Color\n  }) {\n    super();\n\n    const { position, color } = settings;\n\n    this.sizeChangeDistribution = (x: number) => { \n      if (x < 0) {\n        return 0;\n      } \n      if (x > 1) {\n        return 1;\n      }\n      return x;\n    }\n\n    this.opacityChangeDistribution = (x: number) => {\n      if (x < 0) {\n        return 1;\n      }\n      if (x > 1) {\n        return 0;\n      }\n      return 1 - x;\n    };\n\n    this.changeValue = 0;\n    this.changeDuration = 500;\n    this.maxSize = 0.5;\n\n    if (color) {\n      this.color = color;    \n    } else {\n      this.color = new Color(0x00ff00);\n    }\n\n    this.geometry = new CircleGeometry(1, 50);\n    this.material = new MeshBasicMaterial();\n    this.material['color'] = this.color;\n    this.material.opacity = 1;\n    this.material.transparent = true;\n    this.position.set(position.x, position.y, position.z);\n\n    this.update(0);\n  }\n\n  update(time: number) {\n    this.changeValue += time / this.changeDuration;\n    this.material['opacity'] = this.opacityChangeDistribution(this.changeValue);\n    const scaler = Math.max(1e-5, this.sizeChangeDistribution(this.changeValue)) * this.maxSize;\n    this.scale.set(scaler, scaler, 1);\n  }\n\n}","import { Mesh, Shape, ShapeGeometry, MeshBasicMaterial } from \"three\";\n\nexport default class Heart extends Mesh {\n\n  constructor() {\n    super();\n    const heartShape = new Shape();\n\n    heartShape.moveTo(0, -0.5);\n    heartShape.bezierCurveTo(1.5, 0.5, 0.25, 1.5, 0, 0.5);\n    heartShape.bezierCurveTo(-0.25, 1.5, -1.5, 0.5, 0, -0.5);\n\n    const geometry = new ShapeGeometry(heartShape, 20);\n    const material = new MeshBasicMaterial({ color: 0xff0000 });\n   \n    this.geometry = geometry;\n    this.material = material;\n\n    this.scale.set(0.15, 0.15, 1);\n  }\n\n}","import { Target } from \"./Target\";\nimport Lodash from 'lodash';\nimport * as Three from 'three';\nimport { Scene, Vector3, CircleGeometry, MeshBasicMaterial, Color, Mesh, FontLoader, TextGeometry, Group } from 'three';\nimport { GamePhysics, Bounds } from './GamePhysics'\nimport helvetikerRegular from '../fonts/helvetiker_regular.typeface.json';\nimport { Click } from \"./Click\";\nimport { TargetSizeDistribution } from \"./GameComponent\";\nimport Heart from \"./Heart\";\n\nimport { Subject } from 'rxjs';\n\nexport default class Game extends Scene {\n  private bounds2: Bounds;\n  timer: any;\n\n  gameTime: number;\n  lastUpdateTime: number;\n  pauseTime: number;\n  targets: Target[];\n  clicks: Click[];\n\n\n\n  targetPace: number;\n  targetSpeed: number;\n  targetSize: number;\n  targetDuration: number;\n\n  gamePhysics: GamePhysics;\n\n  paused: boolean;\n\n  hearts: Group;\n  score: number;\n  lifeCount: number;\n  onLifeOut: Subject<any>;\n\n  constructor() {\n    super();\n\n    this.background = new Color(0xf9f9f9);\n    this.gamePhysics = new GamePhysics(this.targets);\n\n    this.hearts = new Group();\n    this.onLifeOut = new Subject();\n    this.add(this.hearts);\n    this.lifeCount = 10;\n\n  }\n\n  init() {\n    const handler = {\n      set: (a: any[], i: string, value: any) => {\n        if (i === 'length') {\n          return true;\n        }\n\n        if (a[i] === undefined) {\n          this.children.push(value);\n        } else {\n          const index = Lodash.findIndex(this.children, a[i])\n          this.children[index] = value;\n        }\n\n        a[i] = value;\n\n        return true;\n      },\n\n      deleteProperty: (targets: any[], prop: string) => {\n        Lodash.pullAt(this.children, Lodash.findIndex(this.children, targets[prop]));\n        Lodash.pullAt(targets, parseInt(prop));\n        return true;\n      }\n    }\n\n    this.gameTime = 0;\n    this.targets = [];\n    this.clicks = [];\n    this.paused = false;\n    this.score = 0;\n  \n    this.targets = new Proxy(this.targets, handler);\n    this.clicks = new Proxy(this.clicks, handler);\n\n\n    for (let i = 0; i < this.lifeCount; i++) {\n      const heart = new Heart();\n      this.lifes.push(heart);\n    }\n    this.bounds = this.bounds;\n    this.gamePhysics.circles = this.targets;\n  }\n\n  start() {\n    this.init();\n    this.lastUpdateTime = performance.now();\n    this.timer = setInterval(() => this.update(), 0);\n  }\n\n  stop() {\n    Lodash.remove(this.targets);\n    Lodash.remove(this.clicks);\n    clearInterval(this.timer);\n  }\n\n  pause() {\n    this.paused = true;\n  }\n\n  resume() {\n    this.lastUpdateTime = performance.now();\n    this.paused = false;\n  }\n\n  update() {\n    if (this.paused) {\n      return;\n    }\n\n    const time = performance.now();\n    const timeDiff = time - this.lastUpdateTime;\n    this.gamePhysics.updateState(timeDiff);\n    this.clicks.forEach(click => click.update(timeDiff));\n    Lodash.remove(this.clicks, (click) => click.changeValue > 1);\n    Lodash.remove(this.targets, (target) => target.sizeChangeValue > 1 && target.size === 0);\n    this.gameTime += timeDiff;\n    this.lastUpdateTime = time;\n  }\n\n  addTarget(settings: {\n    position?: Vector3, maxSize?: number, sizeChangeValue?: number, sizeChangeDuration?: number, speed?: number, direction?: Vector3\n    sizeChangeDistribution?: TargetSizeDistribution;\n  }): Target {\n    const target = new Target(settings);\n    this.targets.push(target);\n    return target;\n  }\n\n  onClick(position: Vector3) {\n    const click = new Click({ position: position });\n    const target = this.getTargetAt(position);\n\n    if (target !== undefined) {\n      Lodash.remove(this.targets, target);\n      click.color.set(new Color(0x00ff00));\n      this.score++;\n    } else {\n      click.color.set(new Color(0xff0000));\n      this.lifes.pop();\n      if (this.lifes.length === 0) {\n        this.onLifeOut.next();\n      }\n    }\n\n    this.clicks.push(click);\n  }\n\n  addText() {\n    const loader = new FontLoader();\n    const font = loader.parse(helvetikerRegular);\n    const geometry = new TextGeometry('123', {\n      font: font,\n      size: 1,\n      height: 0,\n    });\n\n    const textMaterial = new Three.MeshStandardMaterial(\n      { color: 0xff0000 }\n    );\n\n    const mesh = new Mesh(geometry, textMaterial);\n    mesh.position.set(0, 0, 0);\n    mesh.scale.set(0.7, 0.7, 1);\n    this.add(mesh);\n  }\n\n  getTargetAt(position: Vector3): Target {\n    for (const target of this.targets) {\n      if (target.position.distanceTo(position) < target.size) {\n        return target;\n      }\n    }\n\n    return undefined;\n  }\n\n  getRandomPosition(): Vector3 {\n    let position: Vector3;\n    outer:\n    while (true) {\n      position = new Vector3(Lodash.random(this.bounds.left, this.bounds.right), Lodash.random(this.bounds.bottom, this.bounds.top), 0);\n      for (const target of this.targets) {\n        if (target.position.distanceTo(position) < target.size) {\n          continue outer;\n        }\n      }\n      return position;\n    }\n  }\n\n  get lifes(): Heart[] {\n    return this.hearts.children as Heart[];\n  }\n\n  get bounds() {\n    return this.bounds2;\n  }\n\n  set bounds(bounds: Bounds) {\n    this.bounds2 = bounds;\n\n    let x = this.bounds.right - 0.2;\n    for (const life of this.lifes) {\n      life.position.set(x, this.bounds.top - 0.2, 0);\n      x -= 0.3;\n    }\n\n    this.gamePhysics.bounds = bounds;\n  }\n\n  get showLifes(): boolean {\n    return Lodash.find(this.children, this.hearts) !== undefined;\n  }\n\n  set showLifes(show: boolean) {\n    if (show) {\n      this.add(this.hearts);\n    } else {\n      this.remove(this.hearts);\n    }\n  }\n\n}","import React, { RefObject } from 'react';\nimport './GameComponent.css';\nimport Game from './Game'\nimport * as Three from 'three';\nimport { PerspectiveCamera, WebGLRenderer, Vector3 } from 'three';\nimport Lodash from 'lodash';\nimport { Target } from './Target';\nimport { Bounds, GamePhysics } from './GamePhysics';\n\n\ninterface Props {\n  onTargetClick?: (target: Target, position: Vector3) => void;\n  onBackgroundClick?: (position: Vector3) => void;\n  onTargetDrag?: (target: Target, dragVector: Vector3) => void;\n  onDirectionDrag?: (target: Target, dragVector: Vector3) => void;\n  onClick?: (position: Vector3) => void;\n}\n\nexport type TargetSizeDistribution = 'linear' | 'constant';\nexport type GameMode = 'normal' | 'testing';\n\nexport interface TargetSettings {\n  minSize?: number,\n  maxSize?: number,\n  sizeChangeDuration?: number,\n  sizeChangeDistribution?: TargetSizeDistribution,\n  sizeChangeValue?: number,\n  speed?: number,\n  position?: Vector3,\n  direction?: Vector3,\n  showDirection?: boolean,\n}\n\nclass GameComponent extends React.Component<Props> {\n  game: Game;\n  gameMode: GameMode;\n  canvasRef: RefObject<HTMLCanvasElement>;\n\n  bounds: Bounds;\n\n  renderer: WebGLRenderer;\n  camera: PerspectiveCamera;\n\n  private selectedTarget: Target;\n  private shouldDragTarget: boolean;\n  private shouldDragDirection: boolean;\n\n  mouseDownPosition: Vector3;\n  previousMousePosition: Vector3;\n\n  animationFrame: number;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n    this.shouldDragTarget = this.shouldDragDirection = false;\n  }\n\n  componentDidMount() {\n    const canvas = this.canvasRef.current;\n    this.renderer = new WebGLRenderer({ antialias: true, canvas: this.canvasRef.current });\n    this.camera = new PerspectiveCamera(75, canvas.width / canvas.height, 0.1, 1000);\n    this.camera.position.z = 5;\n    this.camera.aspect = this.canvasRef.current.parentElement.clientWidth / this.canvasRef.current.parentElement.clientHeight;\n    this.renderer.setSize(this.canvasRef.current.parentElement.clientWidth, this.canvasRef.current.parentElement.clientHeight);\n    this.camera.updateProjectionMatrix();\n\n    const height = 2 * Math.tan(Three.Math.degToRad(this.camera.fov) / 2) * this.camera.position.z;\n    const width = height * this.camera.aspect;\n    this.bounds = { top: height / 2, right: width / 2, left: -width / 2, bottom: -height / 2 };\n\n    this.game = new Game();\n    this.game.bounds = this.bounds;\n\n    this.animate();\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.animationFrame);\n  }\n\n  animate = () => {\n    this.renderer.render(this.game, this.camera);\n    this.animationFrame = requestAnimationFrame(this.animate);\n  }\n\n  clickToScenePos(clickX: number, clickY: number): Vector3 {\n    const canvasLeft = this.canvasRef.current.offsetLeft;\n    const canvasTop = this.canvasRef.current.offsetTop;\n\n    const canvasPosX = clickX - canvasLeft;\n    const canvasPosY = clickY - canvasTop;\n\n    return new Vector3(\n      this.pxToScene(canvasPosX - this.canvasRef.current.width / 2),\n      -1 * this.pxToScene(canvasPosY - this.canvasRef.current.height / 2),\n      0\n    )\n  }\n\n  pxToScene(value: number) {\n    return value / (this.canvasRef.current.width / (2 * this.bounds.right));\n  }\n\n  sceneToPx(value: number) {\n    return value * (this.canvasRef.current.width / (2 * this.bounds.top));\n  }\n\n  onMouseDown = (event: React.MouseEvent) => {\n    const mousePosition = this.previousMousePosition = this.mouseDownPosition = this.clickToScenePos(event.pageX, event.pageY);\n    this.selectedTarget = this.game.getTargetAt(mousePosition);\n\n    for (const target of this.game.targets) {\n      const directionEnd = target.position.clone().add(target.direction.clone().normalize().multiplyScalar(target.speed));\n      if (mousePosition.distanceTo(directionEnd) < this.pxToScene(30)) {\n        this.selectedTarget = target;\n        this.shouldDragDirection = true;\n        return;\n      }\n    }\n\n    if (this.selectedTarget) {\n      this.shouldDragTarget = true;\n    }\n  }\n\n  onMouseUp = (event: React.MouseEvent) => {\n    if (this.mouseDownPosition === undefined) {\n      return;\n    }\n\n    const position = this.clickToScenePos(event.pageX, event.pageY);\n    const target = this.game.getTargetAt(position);\n\n    if (this.mouseDownPosition.distanceTo(position) < this.pxToScene(30)) {\n      if (target === undefined && this.props.onBackgroundClick !== undefined) {\n          this.props.onBackgroundClick(position);\n      } else if (this.props.onTargetClick !== undefined) {\n        this.props.onTargetClick(target, position);\n      }\n    }\n\n    this.shouldDragTarget = false;\n    this.shouldDragDirection = false;\n  }\n\n  onClick = (event: React.MouseEvent) => {\n    const position = this.clickToScenePos(event.pageX, event.pageY);\n    if (this.props.onClick) {\n      this.props.onClick(position);\n    }\n  }\n\n\n  onMouseMove = (event: React.MouseEvent) => {\n    const currentMousePosition = this.clickToScenePos(event.pageX, event.pageY);\n\n    if (this.shouldDragTarget || this.shouldDragDirection) {\n      const dragVec = currentMousePosition.clone().sub(this.previousMousePosition);\n      if (this.shouldDragTarget && this.props.onTargetDrag) {\n        this.props.onTargetDrag(this.selectedTarget, dragVec);\n      }\n      if (this.shouldDragDirection && this.props.onDirectionDrag) {\n        this.props.onDirectionDrag(this.selectedTarget, dragVec);\n      }\n    }\n\n    this.previousMousePosition = currentMousePosition;\n  }\n\n\n  render() {\n    return (\n      <canvas\n        ref={this.canvasRef}\n        onClick={this.onClick}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n        onMouseMove={this.onMouseMove}\n      >\n      </canvas>\n    );\n  }\n\n}\n\nexport default GameComponent;\n","import Lodash from 'lodash';\nimport React, { RefObject } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport { Pause, PlayArrow, Delete } from '@material-ui/icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport Divider from '@material-ui/core/Divider';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport { withStyles, WithStyles, createStyles } from '@material-ui/core';\n\nimport './GameTester.css'\nimport GameComponent, { TargetSettings, GameMode } from '../game/GameComponent';\nimport { TargetSizeDistribution } from '../game/GameComponent';\nimport { Target } from '../game/Target';\nimport Game from '../game/Game';\nimport { Vector3 } from 'three';\n\nconst drawerWidth = 240;\n\nconst styles = createStyles({\n  drawerPaper: {\n    width: drawerWidth,\n    overflow: 'visible'\n  },\n  slider: {\n    padding: '22px 0px',\n  },\n  settings: {\n    margin: 20\n  },\n  mainContent: {\n    height: '100vh',\n    marginLeft: drawerWidth,\n  },\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  }\n});\n\ninterface Props extends WithStyles<typeof styles> {\n\n}\n\ninterface State {\n  open: boolean;\n  targetSettings: TargetSettings;\n  gameMode: GameMode;\n}\n\nclass GameTester extends React.Component<Props, State> {\n  selectedTarget: Target;\n  targetSettings: TargetSettings;\n  game: Game;\n\n  gameComponentRef: RefObject<GameComponent>;\n  gameComponent: GameComponent;\n\n  constructor(props: Props) {\n    super(props);\n    this.gameComponentRef = React.createRef();\n    this.targetSettings = {\n      maxSize: 100,\n      sizeChangeDistribution: 'linear',\n      sizeChangeValue: 0.5,\n      sizeChangeDuration: 10500,\n      speed: 100,\n    };\n\n    this.state = {\n      open: true,\n      targetSettings: this.targetSettings,\n      gameMode: 'testing',\n    };\n  }\n\n  componentDidMount() {\n    this.game = this.gameComponentRef.current.game;\n    this.gameComponent = this.gameComponentRef.current;\n    this.gameComponent.gameMode = 'testing';\n    this.game.showLifes = false;\n    this.game.start();\n  }\n\n\n\n  onMaxSizeChange = (event: React.ChangeEvent, value: number) => {\n    this.targetSettings.maxSize = value;\n    this.setState({ targetSettings: this.targetSettings });\n    if (this.selectedTarget !== undefined) {\n      this.selectedTarget.maxSize = this.gameComponentRef.current.pxToScene(value);\n    }\n  };\n\n  onSizeChangeValueChange = (event: React.ChangeEvent, value: number) => {\n    this.targetSettings.sizeChangeValue = value;\n    this.setState({ targetSettings: this.targetSettings });\n    if (this.selectedTarget !== undefined) {\n      this.selectedTarget.sizeChangeValue = value;\n    }\n  }\n\n  onSpeedChange = (event: React.ChangeEvent, value: number) => {\n    this.targetSettings.speed = value;\n    this.setState({ targetSettings: this.targetSettings });\n    if (this.selectedTarget !== undefined) {\n      this.selectedTarget.speed = this.gameComponentRef.current.pxToScene(value);\n    }\n  }\n\n  onSizeChangeDurationChange = (event: React.ChangeEvent, value: number) => {\n    this.targetSettings.sizeChangeDuration = value;\n    this.setState({ targetSettings: this.targetSettings });\n    if (this.selectedTarget !== undefined) {\n      this.selectedTarget.sizeChangeDuration = value;\n    }\n  }\n\n  sizeChangeDistributionChange = (event: React.ChangeEvent, value: TargetSizeDistribution) => {\n    this.targetSettings.sizeChangeDistribution = value;\n    this.setState({ targetSettings: this.targetSettings });\n\n    if (this.selectedTarget !== undefined) {\n      this.selectedTarget.sizeChangeDistribution = value;\n    }\n  }\n\n  onGameModeChange = (event: React.ChangeEvent, value: GameMode) => {\n    this.setState({ gameMode: value });\n    this.setState({ targetSettings: this.targetSettings });\n    this.gameComponentRef.current.gameMode = value;\n  }\n\n  onDelete = () => {\n    if (this.selectedTarget) {\n      Lodash.remove(this.game.targets, this.selectedTarget);\n    } else {\n      Lodash.remove(this.game.targets, { isSelected: false });\n    }\n    this.selectedTarget = undefined;\n  }\n\n\n  onPause = () => {\n    this.game.pause();\n  }\n\n  onResume = () => {\n    this.game.resume();\n  }\n\n  onTargetSelect = (target: Target) => {\n    this.targetSettings.maxSize = this.gameComponentRef.current.sceneToPx(target.maxSize);\n    this.targetSettings.sizeChangeDuration = target.sizeChangeDuration;\n    this.targetSettings.sizeChangeValue = target.sizeChangeValue;\n    this.targetSettings.speed = this.gameComponentRef.current.sceneToPx(target.speed);\n    this.targetSettings.sizeChangeDistribution = target.sizeChangeDistribution;\n\n    this.setState({\n      targetSettings: this.targetSettings,\n    });\n\n    if (this.selectedTarget !== undefined) {\n      this.selectedTarget.isSelected = false;\n    }\n\n    this.selectedTarget = target;\n    this.selectedTarget.isSelected = true;\n  }\n\n  onTargetClick = (target: Target, position: Vector3) => {\n    switch (this.state.gameMode) {\n      case 'normal':\n        this.game.onClick(position);\n        break;\n      case 'testing':\n        if (target === this.selectedTarget) {\n          this.selectedTarget.isSelected = false;\n          this.selectedTarget = undefined;\n        } else {\n          this.onTargetSelect(target);\n        }\n        break;\n    }\n  }\n\n  onBackgroundClick = (position: Vector3) => {\n    switch (this.state.gameMode) {\n      case 'normal':\n        this.game.onClick(position);\n        break;\n      case 'testing':\n        if (this.selectedTarget === undefined) {\n          const targetSettings = { ...this.targetSettings };\n          targetSettings.maxSize = this.gameComponent.pxToScene(targetSettings.maxSize);\n          targetSettings.speed = this.gameComponent.pxToScene(targetSettings.speed);\n          targetSettings.position = position;\n          targetSettings.showDirection = true;\n          const target = new Target(targetSettings);\n          this.game.targets.push(target);\n        } else {\n          this.selectedTarget.isSelected = false;\n          this.selectedTarget = undefined;\n        }\n        break;\n      default:\n        break;\n    }\n\n  }\n\n  onTargetDrag = (target: Target, dragVec: Vector3) => {\n    target.position.add(dragVec);\n  }\n\n  onDirectionDrag = (target: Target, dragVec: Vector3) => {\n    const directionEnd = target.position.clone().add(target.direction.clone().multiplyScalar(target.speed));\n    target.direction = directionEnd.clone().add(dragVec).sub(target.position);\n    target.speed = target.position.distanceTo(directionEnd.clone().add(dragVec));\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { maxSize, speed, sizeChangeDistribution, sizeChangeDuration, sizeChangeValue } = this.state.targetSettings;\n    const { gameMode } = this.state;\n\n    return (\n      <div>\n        <Drawer classes={{ paper: classes.drawerPaper }} variant=\"persistent\" anchor=\"left\" open={this.state.open}>\n          <div className={classes.buttonContainer}>\n            <IconButton onClick={this.onDelete} color=\"primary\"><Delete /></IconButton>\n          </div>\n          <Divider />\n          <div className=\"settings\">\n            <div>\n              <Typography id=\"label\">Max size</Typography>\n              <Slider\n                min={0}\n                max={200}\n                disabled={false}\n                className={classes.slider}\n                aria-labelledby=\"label\"\n                value={maxSize}\n                onChange={this.onMaxSizeChange}\n              />\n            </div>\n            <div>\n              <Typography id=\"label\">Size change value</Typography>\n              <Slider\n                min={0}\n                max={1}\n                step={0.01}\n                disabled={false}\n                className={classes.slider}\n                aria-labelledby=\"label\"\n                value={sizeChangeValue}\n                onChange={this.onSizeChangeValueChange}\n              />\n            </div>\n            <div>\n              <Typography id=\"label\">Speed</Typography>\n              <Slider\n                min={0}\n                max={500}\n                step={1}\n                disabled={false}\n                className={classes.slider}\n                aria-labelledby=\"label\"\n                value={speed}\n                onChange={this.onSpeedChange}\n              />\n            </div>\n            <div>\n              <Typography id=\"label\">Size change duration</Typography>\n              <Slider\n                min={1000}\n                max={20000}\n                step={10}\n                disabled={false}\n                className={classes.slider}\n                aria-labelledby=\"label\"\n                value={sizeChangeDuration}\n                onChange={this.onSizeChangeDurationChange}\n              />\n            </div>\n            <div>\n              <FormControl>\n                <Typography id=\"label\">Size distribution</Typography>\n                <RadioGroup\n                  value={sizeChangeDistribution}\n                  onChange={this.sizeChangeDistributionChange}\n                >\n                  <FormControlLabel\n                    value=\"constant\"\n                    control=\n                    {<Radio\n                      icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n                      checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n                    />}\n                    label=\"Constant\" />\n                  <FormControlLabel\n                    value=\"linear\"\n                    control=\n                    {<Radio\n                      icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n                      checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n                    />}\n                    label=\"Linear\" />\n                </RadioGroup>\n              </FormControl>\n            </div>\n            <div>\n              <FormControl>\n                <Typography id=\"label\">Game mode</Typography>\n                <RadioGroup\n                  value={gameMode}\n                  onChange={this.onGameModeChange}\n                >\n                  <FormControlLabel\n                    value=\"normal\"\n                    control=\n                    {<Radio\n                      icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n                      checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n                    />}\n                    label=\"Normal\" />\n                  <FormControlLabel\n                    value=\"testing\"\n                    control=\n                    {<Radio\n                      icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n                      checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n                    />}\n                    label=\"Testing\" />\n                </RadioGroup>\n              </FormControl>\n            </div>\n          </div>\n          <Divider />\n          <div className={classes.buttonContainer}>\n            <IconButton onClick={this.onPause} color=\"primary\"><Pause /></IconButton>\n            <IconButton onClick={this.onResume} color=\"primary\"><PlayArrow /></IconButton>\n          </div>\n        </Drawer>\n        <main className={classes.mainContent}>\n          <GameComponent\n            ref={this.gameComponentRef}\n            onTargetClick={this.onTargetClick}\n            onTargetDrag={this.onTargetDrag}\n            onDirectionDrag={this.onDirectionDrag}\n            onBackgroundClick={this.onBackgroundClick}\n          >\n          </GameComponent>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(GameTester);","import React, { RefObject } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/lab/Slider';\nimport Divider from '@material-ui/core/Divider';\nimport Game from '../game/Game';\nimport { Target } from '../game/Target';\nimport GameComponent, { TargetSettings } from '../game/GameComponent';\nimport './CustomComponent.css';\nimport Lodash from 'lodash';\n\nimport { withStyles, WithStyles, createStyles } from '@material-ui/core';\nimport { Vector3 } from 'three';\n\nconst drawerWidth = 240;\n\nconst styles = createStyles({\n  drawerPaper: {\n    width: drawerWidth,\n    overflow: 'visible'\n  },\n  mainContent: {\n    height: '100vh',\n    marginLeft: drawerWidth,\n  },\n})\n\ninterface Props extends WithStyles<typeof styles> {\n\n}\n\ninterface State {\n  open: boolean;\n  pace: number;\n  targetSettings: TargetSettings;\n}\n\nclass CustomComponent extends React.Component<Props, State> {\n  selectedTarget: Target;\n  targetSettings: TargetSettings;\n  game: Game;\n\n  gameComponentRef: RefObject<GameComponent>;\n  gameComponent: GameComponent;\n\n  timer: any;\n\n  constructor(props: Props) {\n    super(props);\n    this.gameComponentRef = React.createRef();\n    this.targetSettings = {\n      maxSize: 100,\n      sizeChangeDistribution: 'linear',\n      sizeChangeValue: 0,\n      sizeChangeDuration: 5000,\n      speed: 50,\n    };\n    this.state = {\n      open: true,\n      pace: 1000,\n      targetSettings: this.targetSettings,\n    };\n  }\n\n  componentDidMount() {\n    this.game = this.gameComponentRef.current.game;\n    this.gameComponent = this.gameComponentRef.current;\n    this.gameComponent.gameMode = 'normal';\n    this.game.showLifes = false;\n    this.game.start();\n    this.timer = setInterval(this.addTarget, this.state.pace);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  addTarget = () => {\n    const targetSettings = { ...this.targetSettings };\n    targetSettings.position = this.game.getRandomPosition();\n    targetSettings.speed = this.gameComponent.pxToScene(targetSettings.speed);\n    targetSettings.maxSize = this.gameComponent.pxToScene(targetSettings.maxSize);\n    targetSettings.direction = new Vector3(Lodash.random(-1, 1, true), Lodash.random(-1, 1, true), 0);\n    this.game.targets.push(new Target(targetSettings));\n  }\n\n  onPaceChange = (event: React.ChangeEvent, value: number) => {\n    this.setState({ pace: value });\n    clearInterval(this.timer);\n\n    this.timer = setInterval(this.addTarget, this.state.pace);\n  }\n\n  onMaxSizeChange = (event: React.ChangeEvent, value: number) => {\n    this.targetSettings.maxSize = value;\n    this.setState({ targetSettings: this.targetSettings });\n  }\n\n  onSpeedChange = (event: React.ChangeEvent, value: number) => {\n    this.targetSettings.speed = value;\n    this.setState({ targetSettings: this.targetSettings });\n  }\n\n  onSizeChangeDurationChange = (event: React.ChangeEvent, value: number) => {\n    this.targetSettings.sizeChangeDuration = value;\n    this.setState({ targetSettings: this.targetSettings });\n  }\n\n  render() {\n    const { maxSize, speed, sizeChangeDuration } = this.state.targetSettings;\n    const { open, pace } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Drawer classes={{ paper: classes.drawerPaper }} variant=\"persistent\" anchor=\"left\" open={open}>\n          <div className=\"settings\">\n            <div>\n              <Typography id=\"label\">Pace</Typography>\n              <Slider\n                className=\"slider\"\n                min={2000}\n                max={200}\n                step={-10}\n                disabled={false}\n                aria-labelledby=\"label\"\n                value={pace}\n                onChange={this.onPaceChange}\n              />\n            </div>\n            <div>\n              <Typography id=\"label\">Max size</Typography>\n              <Slider\n                className=\"slider\"\n                min={0}\n                max={200}\n                disabled={false}\n                aria-labelledby=\"label\"\n                value={maxSize}\n                onChange={this.onMaxSizeChange}\n              />\n            </div>\n            <div>\n              <Typography id=\"label\">Speed</Typography>\n              <Slider\n                className=\"slider\"\n                min={0}\n                max={200}\n                value={speed}\n                onChange={this.onSpeedChange}\n              />\n            </div>\n            <div>\n              <Typography id=\"label\">Size change duration</Typography>\n              <Slider\n                className=\"slider\"\n                min={1000}\n                max={20000}\n                step={10}\n                value={sizeChangeDuration}\n                onChange={this.onSizeChangeDurationChange}\n              />\n            </div>\n          </div>\n        </Drawer>\n        <main className={classes.mainContent}>\n          <GameComponent\n            ref={this.gameComponentRef}\n            onClick={(position) => this.game.onClick(position)}\n          >\n          </GameComponent>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(CustomComponent);","import React, { RefObject } from 'react';\nimport Game from '../game/Game';\nimport { Target } from '../game/Target';\nimport GameComponent, { TargetSettings } from '../game/GameComponent';\nimport Lodash from 'lodash';\nimport { Vector3 } from 'three';\nimport Modal from '@material-ui/core/Modal';\nimport Typography from '@material-ui/core/Typography'\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport './NormalComponent.css'\n\ninterface Props {\n\n}\n\ninterface State {\n  open: boolean;\n}\n\nclass NormalComponent extends React.Component<Props, State> {\n  targetSettings: TargetSettings;\n  pace: number;\n\n  paceChange = [[1000, 200, 0, 60 * 1000]];\n  maxSizeChange = [];\n  speedChange = [];\n  durationChange = [];\n\n  game: Game;\n  gameComponentRef: RefObject<GameComponent>;\n  gameComponent: GameComponent;\n\n  timer: any;\n  targetAddedTime: number;\n\n  constructor(props: Props) {\n    super(props);\n    this.gameComponentRef = React.createRef();\n    this.state = { open: false };\n  }\n\n  init() {\n    this.targetSettings = {\n      maxSize: 100,\n      sizeChangeDistribution: 'linear',\n      sizeChangeValue: 0,\n      sizeChangeDuration: 5000,\n      speed: 50,\n    };\n    this.targetAddedTime = 0;\n    this.pace = 1000;\n  }\n\n  start() {\n    this.init();\n    this.game.start();\n    this.timer = setInterval(this.updateSettings, 50);\n  }\n\n  onLifeOut = () => {\n    this.game.stop();\n    this.setState({ open: true });\n    clearInterval(this.timer);\n  }\n\n  componentDidMount() {\n    this.game = this.gameComponentRef.current.game;\n    this.gameComponent = this.gameComponentRef.current;\n    this.game.onLifeOut.subscribe(this.onLifeOut);\n    this.start();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  addTarget = () => {\n    const targetSettings = { ...this.targetSettings };\n    targetSettings.position = this.game.getRandomPosition();\n    targetSettings.speed = this.gameComponent.pxToScene(targetSettings.speed);\n    targetSettings.maxSize = this.gameComponent.pxToScene(targetSettings.maxSize);\n    targetSettings.direction = new Vector3(Lodash.random(-1, 1, true), Lodash.random(-1, 1, true), 0);\n    this.game.targets.push(new Target(targetSettings));\n  }\n\n  updateSettings = () => {\n    this.pace = this.getValue(this.game.gameTime, this.paceChange);\n    if (this.game.gameTime > this.targetAddedTime + this.pace) {\n      this.addTarget();\n      this.targetAddedTime = this.game.gameTime;\n    }\n  }\n\n  getValue(time: number, changes: number[][]): number {\n    for (const change of changes) {\n      if (time > change[2] && time < change[3]) {\n        const a = (time - change[2]) / (change[3] - change[2]);\n        return a * (change[1] - change[0]) + change[0];\n      }\n    }\n    return changes[changes.length - 1][1];\n  }\n\n  tryAgain = () => {\n    this.start();\n    this.setState({ open: false });\n  }\n\n  render() {\n    const { open } = this.state;\n\n    return (\n      <div style={{ height: '100vh' }}>\n        <GameComponent\n          ref={this.gameComponentRef}\n          onClick={(position) => this.game.onClick(position)}\n        >\n        </GameComponent>\n        <Modal\n          open={open}\n          onClose={() => this.setState({ open: false })}\n          style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n        >\n          <div className=\"paper\">\n            <Typography style={{ paddingBottom: '20px' }} variant=\"h6\" id=\"modal-title\">\n              Your score is: {(this.game && this.game.score)}\n            </Typography>\n            <Button onClick={this.tryAgain}> Try Again </Button>\n            <Button color=\"inherit\"><Link className=\"link\" to=\"/\">Quit</Link></Button>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default NormalComponent;","import React from 'react';\nimport { createStyles, WithStyles, withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport './MainComponent.css';\nimport { Link } from 'react-router-dom';\n\nconst styles = createStyles({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n\n  },\n  title: {\n    flexGrow: 1,\n  },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n\n}\n\ninterface State {\n\n}\n\nclass MainComponent extends React.Component<Props, State> {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar elevation={10} position=\"relative\">\n          <Toolbar>\n            <Button color=\"inherit\"><Link className=\"link\" to=\"/custom/\">Custom</Link></Button>\n            <Button color=\"inherit\"><Link className=\"link\" to=\"/test/\">Test</Link></Button>\n          </Toolbar>\n        </AppBar>\n        <header color=\"primary\" className=\"header\">\n          <div className=\"headerText\">\n            Mouse Practice Game\n          </div>\n          <Button size=\"large\" variant=\"contained\" color=\"primary\" className=\"startButton\">\n            <Link className=\"link\" to=\"/normal/\">Start</Link>\n          </Button>\n        </header>\n      </div >\n    );\n  }\n}\n\nexport default withStyles(styles)(MainComponent);;","import React from 'react';\nimport './App.css';\nimport GameTester from './game-tester/GameTester';\nimport CustomComponent from './custom/CustomComponent';\nimport NormalComponent from './normal/NormalComponent';\nimport MainComponent from './main/MainComponent';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"Game-container\">\n        <Router>\n          <Route exact path=\"/\" component={MainComponent}></Route>\n          <Route path=\"/normal\" component={NormalComponent}></Route>\n          <Route path=\"/custom\" component={CustomComponent}></Route>\n          <Route path=\"/test\" component={GameTester}></Route>\n        </Router>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}