{"version":3,"sources":["game/Arrow.ts","game/CircleGeomety.ts","game/Target.ts","game/GamePhysics.ts","game/Heart.ts","game/Click.ts","game/MeshPool.ts","game/Game.ts","game/GameComponent.tsx","game-tester/GameTester.tsx","custom/CustomComponent.tsx","normal/NormalComponent.tsx","main/MainComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Arrow","triangleMesh","line","geometry","Geometry","vertices","push","Vector3","material","LineBasicMaterial","color","linewidth","Line","triangleGeometry","faces","Face3","triangleMaterial","MeshBasicMaterial","side","DoubleSide","Mesh","add","Group","circleGeomety","CircleGeometry","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","Target","settings","creationTime","collisionTime","collisionPosition","direction2","speed2","maxSize2","sizeChangeValue2","sizeChangeDuration2","sizeChangeDistribution","sizeChangeDuration","minSize","circle","arrow","isSelected2","defaultColor","selectedColor","performance","now","Color","circleMaterial","update","this","x","Math","abs","size","direction","speed","isSelected","currentTime","distance","clone","multiplyScalar","position","maxSize","sizeChangeValue","showDirection","undefined","set","y","z","Infinity","sizeChangeFunction","max","scale","value","setRotationFromAxisAngle","Vector2","angle","normalize","arrowSize","Lodash","find","children","show","remove","GamePhysics","circles","bounds","time","updatePosition","handleCollision","updateSize","separateCircles","forEach","getPosition","right","top","i","length","j","circle2","distanceTo","v1","v2","x1","x2","sub","dot","pow","changedCircles","diff","sign","overlapSize","negate","_","uniq","Heart","heartShape","Shape","moveTo","bezierCurveTo","ShapeGeometry","Click","opacityChangeDistribution","changeValue","changeDuration","opacity","transparent","scaler","meshPool","targetPoolCount","clickPoolCount","targets","clicks","target","pop","click","Game","bounds2","bottom","left","score2","gamePhysics","hearts","lifeCount","onLifeOut","Subject","scoreMesh","hiddenTargets","background","score","addLifes","updateState","removeClick","removeTarget","getTargetAt","addClick","lifes","next","targetSettings","visible","clickSettings","getClick","outer","random","text","font","FontLoader","parse","helvetikerRegular","TextGeometry","height","textMaterial","Three","mesh","heart","Scene","GameComponent","props","game","gameMode","canvasRef","renderer","camera","selectedTarget","shouldDragTarget","shouldDragDirection","mouseDownPosition","previousMousePosition","animationFrame","lastUpdateTime","animate","requestAnimationFrame","render","onWindowResize","canvasWidth","current","parentElement","clientWidth","canvasHeight","clientHeight","width","aspect","setSize","updateProjectionMatrix","tan","degToRad","fov","onMouseDown","event","mousePosition","clickToScenePos","pageX","pageY","directionEnd","pxToScene","onMouseUp","onBackgroundClick","onTargetClick","onClick","onMouseMove","currentMousePosition","dragVec","onTargetDrag","onDirectionDrag","React","createRef","canvas","WebGLRenderer","antialias","PerspectiveCamera","window","onresize","cancelAnimationFrame","reset","clickX","clickY","canvasPosX","offsetLeft","canvasPosY","offsetTop","ref","Component","styles","createStyles","drawerPaper","overflow","slider","padding","margin","mainContent","marginLeft","buttonContainer","display","flexDirection","justifyContent","GameTester","gameComponentRef","gameComponent","onMaxSizeChange","setState","onSizeChangeValueChange","onSpeedChange","onSizeChangeDurationChange","sizeChangeDistributionChange","onGameModeChange","onDelete","onPause","onResume","onTargetSelect","sceneToPx","state","open","showLifes","classes","Drawer","paper","variant","anchor","className","IconButton","Delete","Divider","Typography","id","Slider","min","disabled","aria-labelledby","onChange","step","FormControl","RadioGroup","FormControlLabel","control","Radio","icon","fontSize","checkedIcon","label","Pause","PlayArrow","withStyles","withTheme","mainContentShift","settingsControl","settingInput","CustomComponent","timer","difficultyLevelValues","Map","pace","duration","addTarget","getRandomPosition","onDifficultyLevelChange","difficultyLevel","onPaceChange","get","isNaN","clearInterval","setInterval","hideDrawer","setTimeout","showDrawer","style","ArrowForward","ArrowBack","marginBottom","InputLabel","Select","labelId","e","Number","parseFloat","Array","from","map","key","MenuItem","FormGroup","FormLabel","TextField","type","InputProps","endAdornment","InputAdornment","clsx","NormalComponent","paceChanges","sizeChange","durationChange","speedChange","nextTargetTime","gameStartTime","pause","updateSettings","gameTime","getSetting","tryAgain","resume","start","init","subscribe","changes","multiplier","Modal","onClose","alignItems","paddingBottom","Button","to","root","flexGrow","menuButton","title","MainComponent","AppBar","elevation","Toolbar","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1fcd8ade.chunk.js","sourcesContent":["import { Mesh, Geometry, LineBasicMaterial, Line, Vector3, Group, Face3, MeshBasicMaterial, DoubleSide } from 'three';\n\nexport default class Arrow extends Group {\n  triangleMesh: Mesh;\n  line: Line;\n\n  constructor() {\n    super();\n\n    const geometry = new Geometry();\n    geometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0.8, 0, 0));\n\n    const material = new LineBasicMaterial({ color: 0xff0000, linewidth: 1.85 });\n    \n    this.line = new Line(geometry, material);\n    \n    const triangleGeometry = new Geometry();\n    triangleGeometry.vertices.push(new Vector3(0.8, 0.1, 0));\n    triangleGeometry.vertices.push(new Vector3(0.8, -0.1, 0));\n    triangleGeometry.vertices.push(new Vector3(1, 0, 0));\n    triangleGeometry.faces.push(new Face3(0, 1, 2));\n    \n    const triangleMaterial = new MeshBasicMaterial({\n      color: 0xff0000,\n      side: DoubleSide\n    });\n\n    this.triangleMesh = new Mesh(triangleGeometry, triangleMaterial);\n\n    this.add(this.line);\n    this.add(this.triangleMesh);\n  }\n\n\n}","import { CircleGeometry } from 'three';\n\nexport const circleGeomety = new CircleGeometry(1, 50);\n\ncircleGeomety.verticesNeedUpdate = false;\ncircleGeomety.elementsNeedUpdate = false;\ncircleGeomety.uvsNeedUpdate = false;\ncircleGeomety.normalsNeedUpdate = false;\ncircleGeomety.colorsNeedUpdate = false;\n","import { Mesh, Vector3, Group, CircleGeometry, MeshBasicMaterial, Vector2, Color } from 'three';\nimport Arrow from './Arrow';\nimport { Circle } from './GamePhysics';\nimport { TargetSizeDistribution, TargetSettings } from './GameComponent';\nimport Lodash from 'lodash';\nimport { circleGeomety } from './CircleGeomety';\n\nexport class Target extends Group implements Circle {\n  creationTime: number;\n  collisionTime: number;\n  collisionPosition: Vector3;\n\n  private direction2: Vector3;\n  private speed2: number;\n  private maxSize2: number;\n  private sizeChangeValue2: number;\n  private sizeChangeDuration2: number;\n\n  sizeChangeDistribution: TargetSizeDistribution;\n  sizeChangeDuration: number;\n  minSize: number;\n\n  circle: Mesh;\n  arrow: Arrow;\n\n  private isSelected2: boolean;\n  readonly color: Color;\n  defaultColor: Color;\n  selectedColor: Color;\n\n  get sizeChangeFunction(): (x: number) => number {\n    if (this.sizeChangeDistribution === 'constant') {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      return (x: number): number => {\n        return 1;\n      };\n    }\n    return (x: number): number => {\n      if (x < 0 || x > 1) {\n        return 0;\n      }\n      return 1 - Math.abs(2 * x - 1);\n    }\n  }\n\n  constructor(settings?: TargetSettings) {\n    super();\n\n    this.creationTime = performance.now();\n\n    this.defaultColor = new Color(0x143170);\n    this.selectedColor = new Color(0x7caaf4);\n    this.color = new Color(this.defaultColor);\n\n    const circleMaterial = new MeshBasicMaterial();\n    circleMaterial.color = this.color;\n    this.circle = new Mesh(circleGeomety, circleMaterial);\n    this.arrow = new Arrow();\n    this.isSelected2 = false;\n    this.settings = settings || {};\n  \n    this.add(this.circle);\n    this.update();\n  }\n\n  update(): void {\n    // eslint-disable-next-line no-self-assign\n    this.size = this.size;\n    // eslint-disable-next-line no-self-assign\n    this.direction = this.direction;\n    // eslint-disable-next-line no-self-assign\n    this.speed = this.speed;\n    // eslint-disable-next-line no-self-assign\n    this.isSelected = this.isSelected;\n  }\n\n  set settings(settings: TargetSettings) {\n    const { position, minSize, maxSize, sizeChangeDistribution, sizeChangeDuration, speed, direction, sizeChangeValue, showDirection } = settings;\n\n    this.creationTime = performance.now();\n    this.collisionTime = this.creationTime;\n\n    if (position !== undefined) {\n      this.position.set(position.x, position.y, position.z);\n      this.collisionPosition = this.position.clone();\n    } else {\n      this.position.set(0, 0, 0);\n      this.collisionPosition = this.position.clone();\n    }\n\n    if (sizeChangeDistribution !== undefined) {\n      this.sizeChangeDistribution = sizeChangeDistribution;\n    } else {\n      this.sizeChangeDistribution = 'constant';\n    }\n\n    if (sizeChangeDuration !== undefined) {\n      this.sizeChangeDuration = sizeChangeDuration;\n    } else {\n      this.sizeChangeDuration = Infinity;\n    }\n\n    if (minSize !== undefined) {\n      this.minSize = minSize;\n    } else {\n      this.minSize = 0;\n    }\n\n    if (maxSize !== undefined) {\n      this.maxSize = maxSize;\n    } else {\n      this.maxSize = 1;\n    }\n\n    if (speed !== undefined) {\n      this.speed = speed;\n    } else {\n      this.speed = 0;\n    }\n\n    if (direction !== undefined) {\n      this.direction = direction;\n    } else {\n      this.direction = new Vector3(1, 1, 0);\n    }\n\n    if (sizeChangeValue) {\n      this.sizeChangeValue = sizeChangeValue;\n    } else {\n      this.sizeChangeValue = 0;\n    }\n\n    if (showDirection !== undefined) {\n      this.showDirection = showDirection;\n    }\n  }\n\n  getPosition(): Vector3 {\n    const currentTime = performance.now();\n    const distance = (this.collisionTime - currentTime) * (this.speed / 1000);\n    return this.collisionPosition.clone().add(this.direction.clone().multiplyScalar(distance));\n  }\n\n  get maxSize(): number {\n    return this.maxSize2;\n  }\n\n  set maxSize(maxSize: number) {\n    this.maxSize2 = maxSize;\n    // eslint-disable-next-line no-self-assign\n    this.size = this.size;\n  }\n\n  get size(): number {\n    const sizeChangeValue = (performance.now() - this.creationTime) / this.sizeChangeDuration;\n    return this.sizeChangeFunction(sizeChangeValue) * (this.maxSize - this.minSize) + this.minSize;\n  }\n\n  set size(size: number) {\n    size = Math.max(1e-5, size);\n    this.scale.set(size, size, 1);\n    // eslint-disable-next-line no-self-assign\n    this.speed = this.speed;\n  }\n\n  get sizeChangeValue(): number {\n    return this.sizeChangeValue2;\n  }\n\n  set sizeChangeValue(value: number) {\n    this.sizeChangeValue2 = value;\n    // eslint-disable-next-line no-self-assign\n    this.size = this.size;\n  }\n\n  get isSelected(): boolean {\n    return this.isSelected2;\n  }\n\n  set isSelected(isSelected: boolean) {\n    this.isSelected2 = isSelected;\n    if (isSelected === true) {\n      this.color.set(this.selectedColor);\n    } else {\n      this.color.set(this.defaultColor);\n    }\n  }\n\n  get direction(): Vector3 {\n    return this.direction2;\n  }\n\n  set direction(direction: Vector3) {\n    this.arrow.setRotationFromAxisAngle(new Vector3(0, 0, 1), new Vector2(direction.x, direction.y).angle());\n    this.direction2 = direction.normalize();\n  }\n\n  get speed(): number {\n    return this.speed2;\n  }\n\n  set speed(speed: number) {\n    this.speed2 = speed;\n\n    const arrowSize = Math.max(1e-5, speed / this.size);\n    this.arrow.scale.set(arrowSize, arrowSize, 1);\n  }\n\n  get showDirection(): boolean {\n    return Lodash.find(this.children, this.arrow) !== undefined;\n  }\n\n  set showDirection(show: boolean) {\n    if (show && !this.showDirection) {\n      this.add(this.arrow);\n    } if (!show) {\n      Lodash.remove(this.children, this.arrow);\n    }\n  }\n\n}","import { Vector3 } from 'three';\nimport _ from 'lodash';\n\nexport interface Circle {\n  position: Vector3;\n  direction: Vector3;\n  speed: number;\n  sizeChangeFunction: (x: number) => number;\n  sizeChangeValue: number;\n  sizeChangeDuration: number;\n  minSize: number;\n  maxSize: number;\n  size: number;\n  getPosition: () => Vector3;\n}\n\nexport interface Bounds {\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\n\nexport class GamePhysics {\n  constructor(public circles?: Circle[], public bounds?: Bounds) { }\n\n  updateState(time: number): void {\n    this.updatePosition(time);\n    this.handleCollision();\n    this.updateSize(time);\n    this.separateCircles(this.circles);\n  }\n\n\n  updatePosition(time: number): void {\n    this.circles.forEach(circle => {\n      // const distance = time * (circle.speed / 1000);\n      // circle.position.add(circle.direction.clone().multiplyScalar(distance));\n      const position = circle.getPosition();\n      circle.position.set(position.x, position.y, position.z);\n    });\n  }\n\n\n  updateSize(time: number): void {\n    this.circles.forEach(circle => {\n      // circle.sizeChangeValue += time / circle.sizeChangeDuration;\n      // eslint-disable-next-line no-self-assign\n      circle.size = circle.size;\n    });\n  }\n\n  handleCollision(): void {\n    for (const circle of this.circles) {\n      if (Math.abs(circle.position.x) + circle.size - this.bounds.right > 0) {\n        circle.direction = new Vector3(-circle.direction.x, circle.direction.y, 0);\n      }\n\n      if (Math.abs(circle.position.y) + circle.size - this.bounds.top > 0) {\n        circle.direction = new Vector3(circle.direction.x, -circle.position.y, 0);\n      }\n    }\n\n    for (let i = 0; i < this.circles.length; i++) {\n      const circle = this.circles[i];\n      for (let j = i + 1; j < this.circles.length; j++) {\n        const circle2 = this.circles[j];\n        if (circle.size + circle2.size - circle.position.distanceTo(circle2.position) > 0) {\n          const v1 = circle.direction.clone();\n          const v2 = circle2.direction.clone();\n          const x1 = circle.position.clone();\n          const x2 = circle2.position.clone();\n          circle.direction = v1.clone().sub(x1.clone().sub(x2).multiplyScalar(v1.clone().sub(v2).dot(x1.clone().sub(x2)) / Math.pow(x1.clone().sub(x2).length(), 2)));\n          circle2.direction = v2.clone().sub(x2.clone().sub(x1).multiplyScalar(v2.clone().sub(v1).dot(x2.clone().sub(x1)) / Math.pow(x2.clone().sub(x1).length(), 2)));\n        }\n      }\n    }\n  }\n\n  separateCircles(circles: Circle[]): void {\n    const changedCircles: Circle[] = [];\n\n    for (const circle of circles) {\n      let diff = Math.abs(circle.position.x) + circle.size - this.bounds.right;\n      if (diff > 0) {\n        circle.position.x -= diff * Math.sign(circle.position.x);\n        changedCircles.push(circle);\n      }\n      diff = Math.abs(circle.position.y) + circle.size - this.bounds.top;\n      if (diff > 0) {\n        circle.position.y -= diff * Math.sign(circle.position.y);\n        changedCircles.push(circle);\n      }\n    }\n\n    for (let i = 0; i < circles.length; i++) {\n      const circle = circles[i];\n      for (let j = i + 1; j < circles.length; j++) {\n        const circle2 = circles[j];\n        const overlapSize = circle.size + circle2.size - circle.position.distanceTo(circle2.position);\n        if (overlapSize > 0) {\n          const v1 = circle.position.clone().sub(circle2.position).normalize().multiplyScalar(overlapSize / 2 + 1e-10);\n          circle.position.add(v1);\n          circle2.position.add(v1.negate());\n          changedCircles.push(circle, circle2);\n        }\n      }\n    }\n\n    if (changedCircles.length > 0) {\n      this.separateCircles(_.uniq(changedCircles));\n    }\n  }\n}","import { Mesh, Shape, ShapeGeometry, MeshBasicMaterial } from \"three\";\n\nexport default class Heart extends Mesh {\n  constructor() {\n    super();\n    const heartShape = new Shape();\n\n    heartShape.moveTo(0, -0.5);\n    heartShape.bezierCurveTo(1.5, 0.5, 0.25, 1.5, 0, 0.5);\n    heartShape.bezierCurveTo(-0.25, 1.5, -1.5, 0.5, 0, -0.5);\n\n    const geometry = new ShapeGeometry(heartShape, 20);\n    const material = new MeshBasicMaterial({ color: 0xff0000 });\n   \n    this.geometry = geometry;\n    this.material = material;\n\n    this.scale.set(0.15, 0.15, 1);\n  }\n\n}","import { Mesh, CircleGeometry, MeshBasicMaterial, Color, Vector3 } from 'three';\nimport { circleGeomety } from './CircleGeomety';\n\nexport interface ClickSettings {\n  position?: Vector3;\n  color?: Color;\n}\n\nexport class Click extends Mesh {\n  private sizeChangeDistribution: (x: number) => number;\n  private opacityChangeDistribution: (x: number) => number;\n  changeValue: number;\n  changeDuration: number;\n  maxSize: number;\n\n  readonly color: Color;\n\n  constructor(settings?: ClickSettings) {\n    super();\n\n    settings = settings === undefined ? {} : settings;\n\n    let position = settings.position;\n    const color = settings.color;\n\n\n    this.sizeChangeDistribution = (x: number): number => { \n      if (x < 0) {\n        return 0;\n      } \n      if (x > 1) {\n        return 1;\n      }\n      return x;\n    }\n\n    this.opacityChangeDistribution = (x: number): number => {\n      if (x < 0) {\n        return 1;\n      }\n      if (x > 1) {\n        return 0;\n      }\n      return 1 - x;\n    };\n\n    this.changeValue = 0;\n    this.changeDuration = 500;\n    this.maxSize = 0.18;\n\n    if (color) {\n      this.color = color;    \n    } else {\n      this.color = new Color(0x00ff00);\n    }\n\n    if (!position) {\n      position = new Vector3(0, 0, 0);\n    }\n\n    this.geometry = circleGeomety;\n    this.material = new MeshBasicMaterial();\n    this.material['color'] = this.color;\n    this.material.opacity = 1;\n    this.material.transparent = true;\n    this.position.set(position.x, position.y, position.z);\n\n    this.update(0);\n  }\n\n  update(time: number): void {\n    this.changeValue += time / this.changeDuration;\n    this.material['opacity'] = this.opacityChangeDistribution(this.changeValue);\n    const scaler = Math.max(1e-5, this.sizeChangeDistribution(this.changeValue)) * this.maxSize;\n    this.scale.set(scaler, scaler, 1);\n  }\n\n  set settings(settings: ClickSettings) {\n    settings = settings === undefined ? {} : settings;\n\n    const { color, position } = settings;\n    if (color) {\n      this.material['color'] = this.color;   \n    } else {\n      this.material['color'] = new Color(0x00ff00);\n    }\n\n    if (position) {\n      this.position.set(position.x, position.y, position.z);\n    }\n  }\n\n}","import { Target } from \"./Target\";\nimport { Click } from \"./Click\";\n\nclass MeshPool {\n  targetPoolCount = 100;\n  clickPoolCount = 100;\n\n  targets: Target[] = [];\n  clicks: Click[] = [];\n\n  constructor() {\n    for (let i = 0; i < this.targetPoolCount; i++) {\n      this.targets.push(new Target());\n    }\n\n    for (let i = 0; i < this.clickPoolCount; i++) {\n      this.clicks.push(new Click());\n    }\n  }\n\n  addTarget(target: Target): void {\n    this.targets.push(target);\n  }\n\n  getTarget(): Target {\n    let target: Target;\n\n    if (this.targets.length > 0) {\n      target = this.targets[this.targets.length - 1];\n      this.targets.pop();\n    }\n\n    return target;\n  }\n\n  addClick(click: Click): void {\n    this.clicks.push(click);\n  }\n\n  getClick(): Click {\n    let click: Click;\n\n    if (this.clicks.length > 0) {\n      click = this.clicks[this.clicks.length - 1];\n      this.clicks.pop();\n      \n    }\n\n    click.changeValue = 0;\n    return click;\n  }\n\n\n}\n\nexport const meshPool = new MeshPool();","import { Target } from \"./Target\";\nimport _ from 'lodash';\nimport * as Three from 'three';\nimport { Scene, Vector3, Color, Mesh, FontLoader, TextGeometry, Group } from 'three';\nimport { GamePhysics, Bounds } from './GamePhysics'\nimport helvetikerRegular from '../fonts/helvetiker_regular.typeface.json';\nimport { Click, ClickSettings } from \"./Click\";\nimport { TargetSettings } from \"./GameComponent\";\nimport Heart from \"./Heart\";\n\nimport { Subject } from 'rxjs';\nimport { meshPool } from \"./MeshPool\";\n\nexport default class Game extends Scene {\n  private bounds2: Bounds = { bottom: 0, left: 0, right: 0, top: 0 };\n  private score2 = 0;\n\n  targets: Target[] = [];\n  clicks: Click[] = [];\n\n  gamePhysics = new GamePhysics();\n  hearts = new Group();\n  lifeCount = 10;\n  onLifeOut = new Subject<void>();\n  scoreMesh: Mesh;\n\n  hiddenTargets = [];\n\n  constructor() {\n    super();\n\n    this.background = new Color(0xf9f9f9);\n    // this.add(this.hearts);\n    // this.addLifes();\n    this.gamePhysics.circles = this.targets;\n  }\n\n  reset(): void {\n    _.remove(this.targets);\n    _.remove(this.clicks);\n    _.remove(this.children);\n\n    this.score = 0;\n\n    this.addLifes();\n  }\n\n  update(time: number): void {\n    this.gamePhysics.updateState(time);\n    this.clicks.forEach(click => click.update(time));\n\n    for (let i = 0; i < this.clicks.length; i++) {\n      const click = this.clicks[i];\n      if (click.changeValue > 1) {\n        this.removeClick(click);\n        break;\n      }\n    }\n\n    for (let i = 0; i < this.targets.length; i++) {\n      const target = this.targets[i];\n      if (target.sizeChangeValue > 1 && target.size === 0) {\n        this.removeTarget(target);\n        break;\n      }\n    }\n  }\n\n\n  onClick(position: Vector3): void {\n    const target = this.getTargetAt(position);\n\n    if (target !== undefined) {\n      this.removeTarget(target);\n      this.addClick({ position, color: new Color(0x00ff00) });\n    } else {\n      this.addClick({ position, color: new Color(0xff0000) });\n      this.lifes.pop();\n      if (this.lifes.length === 0) {\n        this.onLifeOut.next();\n      }\n    }\n\n\n  }\n\n  addTarget(targetSettings?: TargetSettings): Target {\n    let target: Target;\n\n    if (this.hiddenTargets.length > 0) {\n      target = this.hiddenTargets[this.hiddenTargets.length - 1];\n      target.visible = true;\n      this.hiddenTargets.pop();\n    } else {\n      target = new Target();\n      this.add(target);\n    }\n\n    target.settings = targetSettings;\n    this.targets.push(target);\n\n    return target;\n  }\n\n  removeTarget(target: Target): void {\n    _.remove(this.targets, target);\n    target.visible = false;\n    this.hiddenTargets.push(target);\n  }\n\n  addClick(clickSettings: ClickSettings): Click {\n    const click = meshPool.getClick();\n    click.settings = clickSettings;\n    this.clicks.push(click);\n    this.add(click);\n    return click;\n  }\n\n  removeClick(click: Click): void {\n    _.remove(this.clicks, click);\n    this.remove(click);\n    _.remove(this.children, click);\n    meshPool.addClick(click);\n  }\n\n  getTargetAt(position: Vector3): Target {\n    for (const target of this.targets) {\n      if (target.position.distanceTo(position) < target.size) {\n        return target;\n      }\n    }\n    return undefined;\n  }\n\n  getRandomPosition(): Vector3 {\n    let position: Vector3;\n    outer:\n    for (; ;) {\n      position = new Vector3(_.random(this.bounds.left, this.bounds.right), _.random(this.bounds.bottom, this.bounds.top), 0);\n      for (const target of this.targets) {\n        if (target.position.distanceTo(position) < target.size) {\n          continue outer;\n        }\n      }\n      return position;\n    }\n  }\n\n  getText(text: string, position: Vector3): Mesh {\n    const loader = new FontLoader();\n    const font = loader.parse(helvetikerRegular);\n\n    const geometry = new TextGeometry(text, {\n      font,\n      size: 1,\n      height: 0,\n    });\n\n    const textMaterial = new Three.MeshStandardMaterial(\n      { color: 0xff0000 }\n    );\n\n    const mesh = new Mesh(geometry, textMaterial);\n\n    mesh.position.set(position.x, position.y, position.z);\n    mesh.scale.set(0.2, 0.2, 1);\n\n    return mesh;\n  }\n\n  addLifes(): void {\n    _.remove(this.lifes);\n\n    let x = this.bounds.right - 0.2;\n\n    for (let i = 0; i < this.lifeCount; i++) {\n      const heart = new Heart();\n      heart.position.set(x, this.bounds.top - 0.2, 0);\n      this.lifes.push(heart);\n      x -= 0.3;\n    }\n  }\n\n  set score(score: number) {\n    // this.score2 = score;\n\n\n    // if (!this.scoreMesh) {\n    //   this.scoreMesh = this.getText(this.score + '', new Vector3(this.bounds.left + 0.1, this.bounds.top - 0.25, 0));\n    //   this.add(this.scoreMesh);\n    // } else {\n    //   const geometry = new TextGeometry(this.score + '', {\n    //     font: this.font,\n    //     size: 1,\n    //     height: 0,\n    //     curveSegments: 10,\n\n    //   });\n    //   this.scoreMesh.geometry = geometry;\n    // }\n\n  }\n\n  get score(): number {\n    return this.score2;\n  }\n\n  get lifes(): Heart[] {\n    return this.hearts.children as Heart[];\n  }\n\n  get bounds(): Bounds {\n    return this.bounds2;\n  }\n\n  set bounds(bounds: Bounds) {\n    this.bounds2 = bounds;\n    this.addLifes();\n    this.gamePhysics.bounds = bounds;\n  }\n\n  get showLifes(): boolean {\n    return _.find(this.children, this.hearts) !== undefined;\n  }\n\n  set showLifes(show: boolean) {\n    if (show) {\n      this.add(this.hearts);\n    } else {\n      this.remove(this.hearts);\n    }\n  }\n\n}","import React, { RefObject, ReactNode } from 'react';\nimport './GameComponent.css';\nimport Game from './Game'\nimport * as Three from 'three';\nimport { PerspectiveCamera, WebGLRenderer, Vector3 } from 'three';\nimport { Target } from './Target';\nimport { Bounds } from './GamePhysics';\n// import _ from 'lodash';\n\ninterface Props {\n  onTargetClick?: (target: Target, position: Vector3) => void;\n  onBackgroundClick?: (position: Vector3) => void;\n  onTargetDrag?: (target: Target, dragVector: Vector3) => void;\n  onDirectionDrag?: (target: Target, dragVector: Vector3) => void;\n  onClick?: (position: Vector3) => void;\n}\n\nexport type TargetSizeDistribution = 'linear' | 'constant';\nexport type GameMode = 'normal' | 'testing';\n\nexport interface TargetSettings {\n  minSize?: number;\n  maxSize?: number;\n  sizeChangeDuration?: number;\n  sizeChangeDistribution?: TargetSizeDistribution;\n  sizeChangeValue?: number;\n  speed?: number;\n  position?: Vector3;\n  direction?: Vector3;\n  showDirection?: boolean;\n}\n\nclass GameComponent extends React.Component<Props> {\n  game: Game;\n  gameMode: GameMode;\n  canvasRef: RefObject<HTMLCanvasElement>;\n\n  bounds: Bounds;\n\n  renderer: WebGLRenderer;\n  camera: PerspectiveCamera;\n\n  private selectedTarget: Target;\n  private shouldDragTarget: boolean;\n  private shouldDragDirection: boolean;\n\n  mouseDownPosition: Vector3;\n  previousMousePosition: Vector3;\n\n  animationFrame: number;\n  lastUpdateTime = performance.now();\n\n  constructor(props: Props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.shouldDragTarget = this.shouldDragDirection = false;\n  }\n\n  componentDidMount(): void {\n    const canvas = this.canvasRef.current;\n    this.renderer = new WebGLRenderer({ antialias: true, canvas: this.canvasRef.current });\n    this.camera = new PerspectiveCamera(50, canvas.width / canvas.height, 0.1, 2000);\n    this.camera.position.z = 5;\n    \n    this.game = new Game();\n\n    this.onWindowResize();\n    window.onresize = this.onWindowResize;\n    \n    this.animate();\n  }\n\n  componentWillUnmount(): void {\n    cancelAnimationFrame(this.animationFrame);\n  }\n\n  animate = (): void => {\n    this.animationFrame = requestAnimationFrame(this.animate);\n\n    const currentTime = performance.now();\n    const diff = currentTime - this.lastUpdateTime;\n    this.game.update(diff);\n\n    this.lastUpdateTime = currentTime;\n    this.renderer.render(this.game, this.camera);\n  }\n\n  reset(): void {\n    this.game.reset();\n    cancelAnimationFrame(this.animationFrame);\n    this.animate();\n  }\n\n  pause(): void {\n    cancelAnimationFrame(this.animationFrame);\n  }\n\n  resume(): void {\n    this.animate();\n  }\n\n  onWindowResize = (): void => {\n    const canvasWidth = this.canvasRef.current.parentElement.clientWidth;\n    const canvasHeight = this.canvasRef.current.parentElement.clientHeight;\n\n    this.canvasRef.current.width = canvasWidth;\n    this.canvasRef.current.height = canvasHeight;\n\n    this.camera.aspect = canvasWidth / canvasHeight;\n    this.renderer.setSize(canvasWidth, canvasHeight);\n    this.camera.updateProjectionMatrix();\n\n    const height = 2 * Math.tan(Three.Math.degToRad(this.camera.fov) / 2) * this.camera.position.z;\n    const width = height * this.camera.aspect;\n    this.bounds = this.game.bounds = { top: height / 2, right: width / 2, left: -width / 2, bottom: -height / 2 };\n  }\n\n  clickToScenePos(clickX: number, clickY: number): Vector3 {\n    const canvasLeft = this.canvasRef.current.offsetLeft;\n    const canvasTop = this.canvasRef.current.offsetTop;\n\n    const canvasPosX = clickX - canvasLeft;\n    const canvasPosY = clickY - canvasTop;\n\n    return new Vector3(\n      this.pxToScene(canvasPosX - this.canvasRef.current.width / 2),\n      -1 * this.pxToScene(canvasPosY - this.canvasRef.current.height / 2),\n      0\n    )\n  }\n\n  pxToScene(value: number): number {\n    return value / (this.canvasRef.current.width / (2 * this.bounds.right));\n  }\n\n  sceneToPx(value: number): number {\n    return value * (this.canvasRef.current.width / (2 * this.bounds.top));\n  }\n\n  onMouseDown = (event: React.MouseEvent): void => {\n    const mousePosition = this.previousMousePosition = this.mouseDownPosition = this.clickToScenePos(event.pageX, event.pageY);\n    this.selectedTarget = this.game.getTargetAt(mousePosition);\n\n    for (const target of this.game.targets) {\n      const directionEnd = target.position.clone().add(target.direction.clone().normalize().multiplyScalar(target.speed));\n      if (mousePosition.distanceTo(directionEnd) < this.pxToScene(30)) {\n        this.selectedTarget = target;\n        this.shouldDragDirection = true;\n        return;\n      }\n    }\n\n    if (this.selectedTarget) {\n      this.shouldDragTarget = true;\n    }\n  }\n\n  onMouseUp = (event: React.MouseEvent): void => {\n    if (this.mouseDownPosition === undefined) {\n      return;\n    }\n\n    const position = this.clickToScenePos(event.pageX, event.pageY);\n    const target = this.game.getTargetAt(position);\n\n    if (this.mouseDownPosition.distanceTo(position) < this.pxToScene(30)) {\n      if (target === undefined && this.props.onBackgroundClick !== undefined) {\n        this.props.onBackgroundClick(position);\n      } else if (this.props.onTargetClick !== undefined) {\n        this.props.onTargetClick(target, position);\n      }\n    }\n\n    this.shouldDragTarget = false;\n    this.shouldDragDirection = false;\n  }\n\n  onClick = (event: React.MouseEvent): void => {\n    const position = this.clickToScenePos(event.pageX, event.pageY);\n    if (this.props.onClick) {\n      this.props.onClick(position);\n    }\n  }\n\n  onMouseMove = (event: React.MouseEvent): void => {\n    const currentMousePosition = this.clickToScenePos(event.pageX, event.pageY);\n\n    if (this.shouldDragTarget || this.shouldDragDirection) {\n      const dragVec = currentMousePosition.clone().sub(this.previousMousePosition);\n      if (this.shouldDragTarget && this.props.onTargetDrag) {\n        this.props.onTargetDrag(this.selectedTarget, dragVec);\n      }\n      if (this.shouldDragDirection && this.props.onDirectionDrag) {\n        this.props.onDirectionDrag(this.selectedTarget, dragVec);\n      }\n    }\n\n    this.previousMousePosition = currentMousePosition;\n  }\n\n  render(): ReactNode {\n    return (\n      <canvas\n        ref={this.canvasRef}\n        onClick={this.onClick}\n        onMouseDown={this.onMouseDown}\n        onMouseUp={this.onMouseUp}\n        onMouseMove={this.onMouseMove}\n      >\n      </canvas>\n    );\n  }\n\n}\n\nexport default GameComponent;\n","import Lodash from 'lodash';\nimport React, { RefObject } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Typography from '@material-ui/core/Typography';\nimport { Pause, PlayArrow, Delete } from '@material-ui/icons';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport Divider from '@material-ui/core/Divider';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport { withStyles, WithStyles, createStyles } from '@material-ui/core';\n\nimport './GameTester.css'\nimport GameComponent, { TargetSettings, GameMode } from '../game/GameComponent';\nimport { TargetSizeDistribution } from '../game/GameComponent';\nimport { Target } from '../game/Target';\nimport Game from '../game/Game';\nimport { Vector3 } from 'three';\n\nconst drawerWidth = 240;\n\nconst styles = createStyles({\n  drawerPaper: {\n    width: drawerWidth,\n    overflow: 'visible'\n  },\n  slider: {\n    padding: '22px 0px',\n  },\n  settings: {\n    margin: 20\n  },\n  mainContent: {\n    height: '100vh',\n    marginLeft: drawerWidth,\n  },\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  }\n});\n\ninterface Props extends WithStyles<typeof styles> {\n\n}\n\ninterface State {\n  open: boolean;\n  targetSettings: TargetSettings;\n  gameMode: GameMode;\n}\n\nclass GameTester extends React.Component<Props, State> {\n  selectedTarget: Target;\n  targetSettings: TargetSettings;\n  game: Game;\n\n  gameComponentRef: RefObject<GameComponent>;\n  gameComponent: GameComponent;\n\n  constructor(props: Props) {\n    super(props);\n    this.gameComponentRef = React.createRef();\n    this.targetSettings = {\n      maxSize: 100,\n      sizeChangeDistribution: 'linear',\n      sizeChangeValue: 0.5,\n      sizeChangeDuration: 10500,\n      speed: 100,\n    };\n\n    this.state = {\n      open: true,\n      targetSettings: this.targetSettings,\n      gameMode: 'testing',\n    };\n  }\n\n  componentDidMount() {\n    this.game = this.gameComponentRef.current.game;\n    this.gameComponent = this.gameComponentRef.current;\n    this.gameComponent.gameMode = 'testing';\n    this.game.showLifes = false;\n    // this.game.start();\n  }\n\n\n\n  onMaxSizeChange = (event: React.ChangeEvent, value: number) => {\n    this.targetSettings.maxSize = value;\n    this.setState({ targetSettings: this.targetSettings });\n    if (this.selectedTarget !== undefined) {\n      this.selectedTarget.maxSize = this.gameComponentRef.current.pxToScene(value);\n    }\n  };\n\n  onSizeChangeValueChange = (event: React.ChangeEvent, value: number) => {\n    this.targetSettings.sizeChangeValue = value;\n    this.setState({ targetSettings: this.targetSettings });\n    if (this.selectedTarget !== undefined) {\n      this.selectedTarget.sizeChangeValue = value;\n    }\n  }\n\n  onSpeedChange = (event: React.ChangeEvent, value: number) => {\n    this.targetSettings.speed = value;\n    this.setState({ targetSettings: this.targetSettings });\n    if (this.selectedTarget !== undefined) {\n      this.selectedTarget.speed = this.gameComponentRef.current.pxToScene(value);\n    }\n  }\n\n  onSizeChangeDurationChange = (event: React.ChangeEvent, value: number) => {\n    this.targetSettings.sizeChangeDuration = value;\n    this.setState({ targetSettings: this.targetSettings });\n    if (this.selectedTarget !== undefined) {\n      this.selectedTarget.sizeChangeDuration = value;\n    }\n  }\n\n  sizeChangeDistributionChange = (event: React.ChangeEvent, value: TargetSizeDistribution) => {\n    this.targetSettings.sizeChangeDistribution = value;\n    this.setState({ targetSettings: this.targetSettings });\n\n    if (this.selectedTarget !== undefined) {\n      this.selectedTarget.sizeChangeDistribution = value;\n    }\n  }\n\n  onGameModeChange = (event: React.ChangeEvent, value: GameMode) => {\n    this.setState({ gameMode: value });\n    this.setState({ targetSettings: this.targetSettings });\n    this.gameComponentRef.current.gameMode = value;\n  }\n\n  onDelete = () => {\n    if (this.selectedTarget) {\n      Lodash.remove(this.game.targets, this.selectedTarget);\n    } else {\n      Lodash.remove(this.game.targets, { isSelected: false });\n    }\n    this.selectedTarget = undefined;\n  }\n\n\n  onPause = () => {\n    // this.game.pause();\n  }\n\n  onResume = () => {\n    // this.game.resume();\n  }\n\n  onTargetSelect = (target: Target) => {\n    this.targetSettings.maxSize = this.gameComponentRef.current.sceneToPx(target.maxSize);\n    this.targetSettings.sizeChangeDuration = target.sizeChangeDuration;\n    this.targetSettings.sizeChangeValue = target.sizeChangeValue;\n    this.targetSettings.speed = this.gameComponentRef.current.sceneToPx(target.speed);\n    this.targetSettings.sizeChangeDistribution = target.sizeChangeDistribution;\n\n    this.setState({\n      targetSettings: this.targetSettings,\n    });\n\n    if (this.selectedTarget !== undefined) {\n      this.selectedTarget.isSelected = false;\n    }\n\n    this.selectedTarget = target;\n    this.selectedTarget.isSelected = true;\n  }\n\n  onTargetClick = (target: Target, position: Vector3) => {\n    switch (this.state.gameMode) {\n      case 'normal':\n        this.game.onClick(position);\n        break;\n      case 'testing':\n        if (target === this.selectedTarget) {\n          this.selectedTarget.isSelected = false;\n          this.selectedTarget = undefined;\n        } else {\n          this.onTargetSelect(target);\n        }\n        break;\n    }\n  }\n\n  onBackgroundClick = (position: Vector3) => {\n    switch (this.state.gameMode) {\n      case 'normal':\n        this.game.onClick(position);\n        break;\n      case 'testing':\n        if (this.selectedTarget === undefined) {\n          const targetSettings = { ...this.targetSettings };\n          targetSettings.maxSize = this.gameComponent.pxToScene(targetSettings.maxSize);\n          targetSettings.speed = this.gameComponent.pxToScene(targetSettings.speed);\n          targetSettings.position = position;\n          targetSettings.showDirection = true;\n          const target = new Target(targetSettings);\n          this.game.targets.push(target);\n        } else {\n          this.selectedTarget.isSelected = false;\n          this.selectedTarget = undefined;\n        }\n        break;\n      default:\n        break;\n    }\n\n  }\n\n  onTargetDrag = (target: Target, dragVec: Vector3) => {\n    target.position.add(dragVec);\n  }\n\n  onDirectionDrag = (target: Target, dragVec: Vector3) => {\n    const directionEnd = target.position.clone().add(target.direction.clone().multiplyScalar(target.speed));\n    target.direction = directionEnd.clone().add(dragVec).sub(target.position);\n    target.speed = target.position.distanceTo(directionEnd.clone().add(dragVec));\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { maxSize, speed, sizeChangeDistribution, sizeChangeDuration, sizeChangeValue } = this.state.targetSettings;\n    const { gameMode } = this.state;\n\n    return (\n      <div>\n        <Drawer classes={{ paper: classes.drawerPaper }} variant=\"persistent\" anchor=\"left\" open={this.state.open}>\n          <div className={classes.buttonContainer}>\n            <IconButton onClick={this.onDelete} color=\"primary\"><Delete /></IconButton>\n          </div>\n          <Divider />\n          <div className=\"settings\">\n            <div>\n              <Typography id=\"label\">Max size</Typography>\n              <Slider\n                min={0}\n                max={200}\n                disabled={false}\n                className={classes.slider}\n                aria-labelledby=\"label\"\n                value={maxSize}\n                onChange={this.onMaxSizeChange}\n              />\n            </div>\n            <div>\n              <Typography id=\"label\">Size change value</Typography>\n              <Slider\n                min={0}\n                max={1}\n                step={0.01}\n                disabled={false}\n                className={classes.slider}\n                aria-labelledby=\"label\"\n                value={sizeChangeValue}\n                onChange={this.onSizeChangeValueChange}\n              />\n            </div>\n            <div>\n              <Typography id=\"label\">Speed</Typography>\n              <Slider\n                min={0}\n                max={500}\n                step={1}\n                disabled={false}\n                className={classes.slider}\n                aria-labelledby=\"label\"\n                value={speed}\n                onChange={this.onSpeedChange}\n              />\n            </div>\n            <div>\n              <Typography id=\"label\">Size change duration</Typography>\n              <Slider\n                min={1000}\n                max={20000}\n                step={10}\n                disabled={false}\n                className={classes.slider}\n                aria-labelledby=\"label\"\n                value={sizeChangeDuration}\n                onChange={this.onSizeChangeDurationChange}\n              />\n            </div>\n            <div>\n              <FormControl>\n                <Typography id=\"label\">Size distribution</Typography>\n                <RadioGroup\n                  value={sizeChangeDistribution}\n                  onChange={this.sizeChangeDistributionChange}\n                >\n                  <FormControlLabel\n                    value=\"constant\"\n                    control=\n                    {<Radio\n                      icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n                      checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n                    />}\n                    label=\"Constant\" />\n                  <FormControlLabel\n                    value=\"linear\"\n                    control=\n                    {<Radio\n                      icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n                      checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n                    />}\n                    label=\"Linear\" />\n                </RadioGroup>\n              </FormControl>\n            </div>\n            <div>\n              <FormControl>\n                <Typography id=\"label\">Game mode</Typography>\n                <RadioGroup\n                  value={gameMode}\n                  onChange={this.onGameModeChange}\n                >\n                  <FormControlLabel\n                    value=\"normal\"\n                    control=\n                    {<Radio\n                      icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n                      checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n                    />}\n                    label=\"Normal\" />\n                  <FormControlLabel\n                    value=\"testing\"\n                    control=\n                    {<Radio\n                      icon={<RadioButtonUncheckedIcon fontSize=\"small\" />}\n                      checkedIcon={<RadioButtonCheckedIcon fontSize=\"small\" />}\n                    />}\n                    label=\"Testing\" />\n                </RadioGroup>\n              </FormControl>\n            </div>\n          </div>\n          <Divider />\n          <div className={classes.buttonContainer}>\n            <IconButton onClick={this.onPause} color=\"primary\"><Pause /></IconButton>\n            <IconButton onClick={this.onResume} color=\"primary\"><PlayArrow /></IconButton>\n          </div>\n        </Drawer>\n        <main className={classes.mainContent}>\n          <GameComponent\n            ref={this.gameComponentRef}\n            onTargetClick={this.onTargetClick}\n            onTargetDrag={this.onTargetDrag}\n            onDirectionDrag={this.onDirectionDrag}\n            onBackgroundClick={this.onBackgroundClick}\n          >\n          </GameComponent>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(GameTester);","import React, { RefObject, ReactNode } from 'react';\n\nimport clsx from 'clsx';\n\nimport Game from '../game/Game';\nimport { Target } from '../game/Target';\nimport GameComponent, { TargetSettings } from '../game/GameComponent';\nimport './CustomComponent.css';\nimport _ from 'lodash';\n\nimport { IconButton, withStyles, WithStyles, createStyles, Select, MenuItem, InputLabel, Drawer, FormControl, TextField, FormLabel, FormGroup, InputAdornment } from '@material-ui/core';\nimport { ArrowBack, ArrowForward } from '@material-ui/icons'\nimport { Vector3 } from 'three';\n\nconst drawerWidth = 240;\n\nconst styles = createStyles({\n  drawerPaper: {\n    width: drawerWidth,\n    overflow: 'visible'\n  },\n  mainContent: {\n    height: '100vh',\n    marginLeft: drawerWidth,\n  },\n  mainContentShift: {\n    marginLeft: 0,\n  },\n  settingsControl: {\n    padding: 12,\n  },\n  settingInput: {\n    margin: '12px 0px',\n  },\n\n})\n\ntype Props = WithStyles<typeof styles>\n\ninterface State {\n  open: boolean;\n  pace: number;\n  difficultyLevel: number;\n  targetSettings: TargetSettings;\n}\n\ninterface DifficultySetting {\n  pace: number;\n  size: number;\n  duration: number;\n  speed: number;\n}\n\nclass CustomComponent extends React.Component<Props, State> {\n  gameComponentRef: RefObject<GameComponent>;\n  gameComponent: GameComponent;\n  game: Game;\n\n  selectedTarget: Target;\n  targetSettings: TargetSettings;\n\n  timer: unknown;\n\n  difficultyLevelValues = new Map<number, DifficultySetting>(\n    [\n      [1, { pace: 0, size: 0, duration: 0, speed: 0 }],\n      [2, { pace: 0, size: 0, duration: 0, speed: 0 }],\n      [3, { pace: 0, size: 0, duration: 0, speed: 0 }],\n      [4, { pace: 0, size: 0, duration: 0, speed: 0 }],\n      [5, { pace: 2, size: 30, duration: 2.5, speed: 50 }],\n      [6, { pace: 0, size: 0, duration: 0, speed: 0 }],\n      [7, { pace: 0, size: 0, duration: 0, speed: 0 }],\n      [8, { pace: 0, size: 0, duration: 0, speed: 0 }],\n      [9, { pace: 0, size: 0, duration: 0, speed: 0 }],\n      [10, { pace: 0, size: 0, duration: 0, speed: 0 }],\n    ]\n  );\n\n\n  constructor(props: Props) {\n    super(props);\n    this.gameComponentRef = React.createRef();\n    this.targetSettings = {\n      maxSize: 100,\n      sizeChangeDistribution: 'linear',\n      sizeChangeValue: 0,\n      sizeChangeDuration: 5,\n      speed: 50,\n    };\n    this.state = {\n      open: true,\n      pace: 1,\n      difficultyLevel: 5,\n      targetSettings: this.targetSettings,\n    };\n  }\n\n  componentDidMount(): void {\n    this.game = this.gameComponentRef.current.game;\n    this.gameComponent = this.gameComponentRef.current;\n    this.gameComponent.gameMode = 'normal';\n    this.game.showLifes = false;\n    this.timer = setInterval(this.addTarget, this.state.pace * 1000);\n    this.onDifficultyLevelChange(this.state.difficultyLevel);\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timer as number);\n  }\n\n  addTarget = (): void => {\n    const targetSettings = { ...this.targetSettings };\n    targetSettings.position = this.game.getRandomPosition();\n    targetSettings.speed = this.gameComponent.pxToScene(targetSettings.speed);\n    targetSettings.maxSize = this.gameComponent.pxToScene(targetSettings.maxSize);\n    targetSettings.sizeChangeDuration *= 1000;\n    targetSettings.direction = new Vector3(_.random(-1, 1, true), _.random(-1, 1, true), 0);\n    this.game.addTarget(targetSettings);\n  }\n\n  onDifficultyLevelChange = (difficultyLevel: number): void => {\n    this.setState({ difficultyLevel: difficultyLevel });\n\n    this.onPaceChange(this.difficultyLevelValues.get(difficultyLevel).pace);\n    this.onMaxSizeChange(this.difficultyLevelValues.get(difficultyLevel).size);\n    this.onSizeChangeDurationChange(this.difficultyLevelValues.get(difficultyLevel).duration);\n    this.onSpeedChange(this.difficultyLevelValues.get(difficultyLevel).speed);\n  }\n\n  onPaceChange = (pace: number): void => {\n    this.setState({ pace: pace });\n\n    if (!isNaN(pace)) {\n      clearInterval(this.timer as number);\n      if (pace > 0) {\n        this.timer = setInterval(this.addTarget, 1000 / pace);\n      }\n    }\n  }\n\n  onMaxSizeChange = (size: number): void => {\n    this.targetSettings.maxSize = size;\n    this.setState({ targetSettings: this.targetSettings });\n  }\n\n  onSpeedChange = (speed: number): void => {\n    this.targetSettings.speed = speed;\n    this.setState({ targetSettings: this.targetSettings });\n  }\n\n  onSizeChangeDurationChange = (duration: number): void => {\n    this.targetSettings.sizeChangeDuration = duration;\n    this.setState({ targetSettings: this.targetSettings });\n  }\n\n  hideDrawer = (): void => {\n    this.setState({ open: false });\n    setTimeout(this.gameComponent.onWindowResize, 0);\n  }\n\n  showDrawer = (): void => {\n    this.setState({ open: true });\n    setTimeout(this.gameComponent.onWindowResize, 0);\n  }\n\n  render(): ReactNode {\n    const { maxSize, speed, sizeChangeDuration } = this.state.targetSettings;\n    const { open, pace, difficultyLevel } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <IconButton style={{ position: 'absolute' }} onClick={this.showDrawer}><ArrowForward /></IconButton>\n        <Drawer classes={{ paper: classes.drawerPaper }} variant=\"persistent\" anchor=\"left\" open={open}>\n          <div>\n            <IconButton\n              onClick={this.hideDrawer}\n            >\n              <ArrowBack />\n            </IconButton>\n          </div>\n          <FormControl style={{ margin: 20, marginBottom: 40 }} variant=\"outlined\">\n            <InputLabel id=\"difficulty\">Difficulty Level</InputLabel>\n            <Select\n              labelId=\"difficulty\" value={difficultyLevel} label=\"Difficulty Level\"\n              onChange={(e): void => this.onDifficultyLevelChange(Number.parseFloat(e.target.value as string))}>\n              {Array.from(this.difficultyLevelValues).map(([key]) => <MenuItem key={key} value={key}>{key}</MenuItem>)}\n            </Select>\n          </FormControl>\n          <FormGroup className={classes.settingsControl}>\n            <FormLabel>Settings</FormLabel>\n            <TextField\n              className={classes.settingInput} variant=\"outlined\" label=\"Pace\" type=\"number\"\n              value={pace}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">target/s</InputAdornment>,\n              }}\n              onChange={(e): void => this.onPaceChange(Number.parseFloat(e.target.value))}\n            />\n            <TextField\n              className={classes.settingInput} variant=\"outlined\" label=\"Size\" type=\"number\"\n              value={maxSize}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">px</InputAdornment>,\n              }}\n              onChange={(e): void => this.onMaxSizeChange(Number.parseFloat(e.target.value))}\n            />\n            <TextField\n              className={classes.settingInput} variant=\"outlined\" label=\"Duration\" type=\"number\"\n              value={sizeChangeDuration}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">s</InputAdornment>,\n              }}\n              onChange={(e): void => this.onSizeChangeDurationChange(Number.parseFloat(e.target.value))}\n            />\n            <TextField\n              className={classes.settingInput} variant=\"outlined\" label=\"Speed\" type=\"number\"\n              value={speed}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">px/s</InputAdornment>,\n              }}\n              onChange={(e): void => this.onSpeedChange(Number.parseFloat(e.target.value))}\n            />\n          </FormGroup>\n        </Drawer>\n        <main className={clsx(classes.mainContent, {[classes.mainContentShift]: !open})}>\n          <GameComponent\n            ref={this.gameComponentRef}\n            onClick={(position): void => this.game.onClick(position)}\n          >\n          </GameComponent>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(CustomComponent);","import React, { RefObject, ReactNode } from 'react';\nimport Game from '../game/Game';\nimport { Target } from '../game/Target';\nimport GameComponent, { TargetSettings } from '../game/GameComponent';\nimport Lodash from 'lodash';\nimport { Vector3 } from 'three';\nimport Modal from '@material-ui/core/Modal';\nimport Typography from '@material-ui/core/Typography'\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport './NormalComponent.css'\n\ninterface State {\n  open: boolean;\n}\n\nclass NormalComponent extends React.Component<{}, State> {\n  targetSettings: TargetSettings;\n  pace: number;\n\n  paceChanges = [[0.5, 0], [1, 10], [1.5, 20], [2, 30], [2.5, 45], [3, 60], [10, 60 * 5]];\n  sizeChange = [[75, 0], [40, 30], [30, 60], [15, 60 * 5]];\n  durationChange = [[3000, 0], [2500, 30], [2000, 60], [1000, 60 * 5]];\n  speedChange = [[0, 0], [75, 10], [100, 60], [300, 60 * 5]];\n\n  game: Game;\n  gameComponentRef: RefObject<GameComponent>;\n  gameComponent: GameComponent;\n\n  timer: number;\n  nextTargetTime: number;\n  gameStartTime: number;\n\n  constructor(props: {}) {\n    super(props);\n    this.gameComponentRef = React.createRef();\n    this.state = { open: false };\n  }\n\n  init(): void {\n    this.targetSettings = {\n      maxSize: 100,\n      sizeChangeDistribution: 'linear',\n      sizeChangeValue: 0,\n      sizeChangeDuration: 5000,\n      speed: 50,\n    };\n    this.nextTargetTime = 0;\n    this.pace = 1000;\n  }\n\n  start(): void {\n    this.init();\n    this.timer = setInterval(this.updateSettings, 50) as unknown as number; \n    this.gameStartTime = this.nextTargetTime = performance.now();\n    this.addTarget();\n  }\n\n  onLifeOut = (): void => {\n    this.setState({ open: true });\n    this.gameComponent.reset();\n    this.gameComponent.pause();\n    clearInterval(this.timer);\n  }\n\n  componentDidMount(): void {\n    this.game = this.gameComponentRef.current.game;\n    this.gameComponent = this.gameComponentRef.current;\n    this.game.onLifeOut.subscribe(this.onLifeOut);\n    this.start();\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.timer);\n  }\n\n  addTarget = (): void => {\n    const targetSettings = { ...this.targetSettings };\n    targetSettings.position = this.game.getRandomPosition();\n    targetSettings.speed = this.gameComponent.pxToScene(targetSettings.speed);\n    targetSettings.maxSize = this.gameComponent.pxToScene(targetSettings.maxSize);\n    targetSettings.direction = new Vector3(Lodash.random(-1, 1, true), Lodash.random(-1, 1, true), 0);\n    this.game.targets.push(new Target(targetSettings));\n  }\n\n  updateSettings = (): void => {\n    const currentTime = performance.now();\n    const gameTime = currentTime - this.gameStartTime;\n\n    this.targetSettings.maxSize = this.getSetting(gameTime, this.sizeChange);\n    this.targetSettings.sizeChangeDuration = this.getSetting(gameTime, this.durationChange);\n    this.targetSettings.speed = this.getSetting(gameTime, this.speedChange);\n\n    if (currentTime > this.nextTargetTime + this.pace) {\n      this.addTarget();\n      this.pace = this.getSetting(gameTime, this.paceChanges);\n      this.nextTargetTime = currentTime + 1000 / this.pace;\n    }\n  }\n\n  getSetting(gameTime: number, changes: Array<Array<number>>): number {\n    gameTime /= 1000;\n    for (let i = 0; i < changes.length - 1; i++) {\n      if (gameTime > changes[i][1] && gameTime < changes[i + 1][1]) {\n        const multiplier = (gameTime - changes[i][1]) / (changes[i + 1][1] - changes[i][1])\n        return changes[i][0] + (changes[i + 1][0] - changes[i][0]) * multiplier;\n      }\n    }\n    return changes[changes.length - 1][0];\n  }\n\n  tryAgain = (): void => {\n    this.gameComponent.resume();\n    this.start();\n    this.setState({ open: false });\n  }\n\n  render(): ReactNode {\n    const { open } = this.state;\n\n    return (\n      <div style={{ height: '100vh' }}>\n        <GameComponent\n          ref={this.gameComponentRef}\n          onClick={(position): void => this.game.onClick(position)}\n        >\n        </GameComponent>\n        <Modal\n          open={open}\n          onClose={(): void => this.setState({ open: false })}\n          style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n        >\n          <div className=\"paper\">\n            <Typography style={{ paddingBottom: '20px' }} variant=\"h6\" id=\"modal-title\">\n              Your score is: {(this.game && this.game.score)}\n            </Typography>\n            <Button onClick={this.tryAgain}> Try Again </Button>\n            <Button color=\"inherit\"><Link className=\"link\" to=\"/\">Quit</Link></Button>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default NormalComponent;","import React from 'react';\nimport { createStyles, WithStyles, withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport './MainComponent.css';\nimport { Link } from 'react-router-dom';\n\nconst styles = createStyles({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n\n  },\n  title: {\n    flexGrow: 1,\n  },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n\n}\n\ninterface State {\n\n}\n\nclass MainComponent extends React.Component<Props, State> {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar elevation={10} position=\"relative\">\n          <Toolbar>\n            <Button color=\"inherit\"><Link className=\"link\" to=\"/custom/\">Custom</Link></Button>\n            <Button color=\"inherit\"><Link className=\"link\" to=\"/test/\">Test</Link></Button>\n          </Toolbar>\n        </AppBar>\n        <header color=\"primary\" className=\"header\">\n          <div className=\"headerText\">\n            Mouse Practice Game\n          </div>\n          <Button size=\"large\" variant=\"contained\" color=\"primary\" className=\"startButton\">\n            <Link className=\"link\" to=\"/normal/\">Start</Link>\n          </Button>\n        </header>\n      </div >\n    );\n  }\n}\n\nexport default withStyles(styles)(MainComponent);;","import React from 'react';\nimport './App.css';\nimport GameTester from './game-tester/GameTester';\nimport CustomComponent from './custom/CustomComponent';\nimport NormalComponent from './normal/NormalComponent';\nimport MainComponent from './main/MainComponent';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"Game-container\">\n        <Router>\n          <Route exact path=\"/\" component={MainComponent}></Route>\n          <Route path=\"/normal\" component={NormalComponent}></Route>\n          <Route path=\"/custom\" component={CustomComponent}></Route>\n          <Route path=\"/test\" component={GameTester}></Route>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}